<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>子书承宇</title>
  
  
  <link href="https://hp-l.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://hp-l.gitee.io/"/>
  <updated>2024-05-05T23:14:19.359Z</updated>
  <id>https://hp-l.gitee.io/</id>
  
  <author>
    <name>子书承宇</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>制作一个自动远程更新的RGB万年历</title>
    <link href="https://hp-l.gitee.io/2024/05/04/zhi_zuo_yi_ge_zi_dong_yuan_cheng_geng_xin_de_rgb_wan_nian_li/"/>
    <id>https://hp-l.gitee.io/2024/05/04/zhi_zuo_yi_ge_zi_dong_yuan_cheng_geng_xin_de_rgb_wan_nian_li/</id>
    <published>2024-05-04T07:25:34.000Z</published>
    <updated>2024-05-05T23:14:19.359Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h1><p>今年一月份整理元件箱的时候发现了一个8位RGB灯条，想起网上前段时间流行的 WIFI 像素时钟：<code>LaMetric</code></p><p><img src="https://lametric.com/sites/default/files/2020-05/desktop.%20jpg.jpg" alt="LaMetric" /></p><p>正好可以巩固一下曾经写代码的快乐时光，开搞！！手上的灯珠比较大，当时也没有仔细考虑工业设计，就打算做个能用的就行。</p><p>下面做了个简单的第一版，其实真的可以优化很多地方，看完不要笑😂😂😂，但是懒得搞了，先用着再说</p><p>硬件创造世界，软件让世界更美好，硬件底层搭好了，软件能实现出各种各样的功能，优化人类体验。</p><div class="tag-plugin swiper fancybox" id="swiper-api" width="max" effect="cards"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="1.png" alt="1.png" /></div><div class="swiper-slide"><img no-lazy src="2.jpg" alt="2.jpg" /></div><div class="swiper-slide"><img no-lazy src="3.jpg" alt="3.jpg" /></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><p>调试的时候拍的</p><div class="tag-plugin swiper fancybox" id="swiper-api" width="max" effect="cards"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="4.jpg" alt="4.jpg" /></div><div class="swiper-slide"><img no-lazy src="5.jpg" alt="5.jpg" /></div><div class="swiper-slide"><img no-lazy src="6.jpg" alt="6.jpg" /></div><div class="swiper-slide"><img no-lazy src="7.jpg" alt="7.jpg" /></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><h1 id="设计"><a class="markdownIt-Anchor" href="#设计"></a> 设计</h1><h2 id="硬件设计"><a class="markdownIt-Anchor" href="#硬件设计"></a> 硬件设计</h2><p>硬件设计其实比较简单，我懒到电源直接买了整个模块搭上去。。。就是PCB正面左边二维码区域，PCB正面右边就是8266模块了，背面的是陀螺仪的降压IC</p><div class="tag-plugin image"><div class="image-bg"><img src="2.png" alt="PCB正面" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">PCB正面</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="3.png" alt="PCB背面" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">PCB背面</span></div></div><h2 id="原理图"><a class="markdownIt-Anchor" href="#原理图"></a> 原理图</h2><p>硬件预留了18650电池和电量检测部分电路，软件没有还没有做</p><div class="tag-plugin image"><div class="image-bg"><img src="4.png" alt="原理图1" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">原理图1</span></div></div><p>这个小项目 RGB 灯有 100 个，也就是<code>10 * 10 = 100</code>的点阵，当时没想那么多，结果就是很多图像没有办法展示出来了，LaMetric可是 <code>4 * 8 * 8 = 256</code>像素的，按照设计第一版有预留电容，但是背面的图案太不好看了，就直接拿掉了（按道理加电容更加稳定），一百个灯珠，焊接是真的累😮‍💨</p><div class="tag-plugin image"><div class="image-bg"><img src="5.png" alt="原理图2" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">原理图2</span></div></div><h2 id="功耗测试"><a class="markdownIt-Anchor" href="#功耗测试"></a> 功耗测试</h2><p>实际测试发现，运行彩虹流水灯，也就是功耗拉满的时候过 RGB 灯珠电流达到了 0.9A 左右，也就是5V*09.A=4.5W了，功耗比较高了，再测了测发热量满载都50°C了</p><div class="tag-plugin image"><div class="image-bg"><img src="1.jpg" alt="温度" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">温度</span></div></div><h2 id="软件部分设计"><a class="markdownIt-Anchor" href="#软件部分设计"></a> 软件部分设计</h2><p>代码是arduino写的，写了两千多行，代码长了点，不太好展示，基本逻辑就是控制RGB显示图案出来。</p><p>下面展示几个联网跟新的操作</p><h3 id="联网抓取json文件"><a class="markdownIt-Anchor" href="#联网抓取json文件"></a> 联网抓取json文件</h3><p>每天检测两次，看是否有固件更新，一但有就马上判断进入OTA了</p><div class="tag-plugin image"><div class="image-bg"><img src="6.png" alt="获取更新" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">获取更新</span></div></div><p>文件格式如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;app_version_X&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">//主版本号</span></span><br><span class="line">    <span class="attr">&quot;app_version_Y&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">//子版本号</span></span><br><span class="line">    <span class="attr">&quot;app_version_Z&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="comment">//阶段版本号</span></span><br><span class="line">    <span class="attr">&quot;update&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="comment">//更新锁</span></span><br><span class="line">    <span class="attr">&quot;MUST_update&quot;</span><span class="punctuation">:</span> <span class="number">0</span> <span class="comment">//强制更新</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="通过http网址跟新固件"><a class="markdownIt-Anchor" href="#通过http网址跟新固件"></a> 通过http网址跟新固件</h3><p>就这个功能函数我找了好久，网上大部分都是 arduino IDE 更新固件，要不就是局域网跟新，自己整合了一段时间，打包了一个函数，直接拿去使用，记得需要添加头文件</p><p>下面这段是更新固件的百分数，实现每增加1%就亮一个灯。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strip.<span class="built_in">setPixelColor</span>(((progress / (total / <span class="number">100</span>))) - <span class="number">1</span>, (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span> * brightness / <span class="number">100</span>, (<span class="number">255</span> - (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span>) * brightness / <span class="number">100</span>, (<span class="number">255</span> - (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span>) * brightness / <span class="number">100</span>);</span><br></pre></td></tr></table></figure><p>而<code>http://V1_0_1_beta.bin</code>可以替换成自己的固件链接</p><p>完整函数如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//必备的头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266httpUpdate.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能：联网下载固件文件OTA</span></span><br><span class="line"><span class="comment"> * @param NONE</span></span><br><span class="line"><span class="comment"> * @return NONE</span></span><br><span class="line"><span class="comment"> * @example https_OTA();</span></span><br><span class="line"><span class="comment"> * @note NONE</span></span><br><span class="line"><span class="comment"> * @link https://zhuanlan.zhihu.com/p/435855807</span></span><br><span class="line"><span class="comment"> * @history</span></span><br><span class="line"><span class="comment"> * V0.0.1 2024-01-05 初始版本，未能实现功能</span></span><br><span class="line"><span class="comment"> * V0.0.1 2024-01-08 更新变量 UpdateClient，成功升级</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">https_OTA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">RGB_GFX_PIC</span>(up_date);</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// 设置回调函数以获取下载进度</span></span><br><span class="line">    ESPhttpUpdate.<span class="built_in">onProgress</span>([](<span class="type">int</span> progress, <span class="type">int</span> total) &#123;</span><br><span class="line">      <span class="comment">//注释打印 Serial.printf(&quot;Progress: %d%%\n&quot;, (progress * 100) / total);</span></span><br><span class="line">      strip.<span class="built_in">setPixelColor</span>(((progress / (total / <span class="number">100</span>))) - <span class="number">1</span>, (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span> * brightness / <span class="number">100</span>, (<span class="number">255</span> - (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span>) * brightness / <span class="number">100</span>, (<span class="number">255</span> - (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span>) * brightness / <span class="number">100</span>);</span><br><span class="line">      strip.<span class="built_in">show</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    t_httpUpdate_return ret = ESPhttpUpdate.<span class="built_in">update</span>(UpdateClient, <span class="string">&quot;http://V1_0_1_beta.bin&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (ret) &#123;</span><br><span class="line">      <span class="keyword">case</span> HTTP_UPDATE_OK:</span><br><span class="line">        <span class="comment">//注释打印 Serial.println(&quot;Firmware updated successfully&quot;);</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> HTTP_UPDATE_FAILED:</span><br><span class="line">        <span class="comment">//注释打印 Serial.println(&quot;Firmware update failed&quot;);</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> HTTP_UPDATE_NO_UPDATES:</span><br><span class="line">        <span class="comment">//注释打印 Serial.println(&quot;No firmware updates available&quot;);</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">//注释打印 Serial.printf(&quot;Firmware update error %d\n&quot;, ret);</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="还没写完"><a class="markdownIt-Anchor" href="#还没写完"></a> <em>还没写完…</em></h2><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="作品" scheme="https://hp-l.gitee.io/categories/%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="机器之脉络" scheme="https://hp-l.gitee.io/tags/%E6%9C%BA%E5%99%A8%E4%B9%8B%E8%84%89%E7%BB%9C/"/>
    
    <category term="ws2812b" scheme="https://hp-l.gitee.io/tags/ws2812b/"/>
    
    <category term="esp8266" scheme="https://hp-l.gitee.io/tags/esp8266/"/>
    
  </entry>
  
  <entry>
    <title>蒸汽核心能源卡诞生日</title>
    <link href="https://hp-l.gitee.io/2024/04/27/zheng_qi_he_xin_neng_yuan_qia_dan_sheng_ri/"/>
    <id>https://hp-l.gitee.io/2024/04/27/zheng_qi_he_xin_neng_yuan_qia_dan_sheng_ri/</id>
    <published>2024-04-27T15:35:24.000Z</published>
    <updated>2024-05-06T05:10:37.446Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h1><p>最近想做一块移动充电板子，想着以后其他小制作能用得上，起个名字就叫“蒸汽核心”吧，电源就像心脏，为机器提供源源不断的能源，所以这块板卡就是心脏卡。在选择PMIC的时候选中了BQ24610，不得不说这是颗PMIC真的坑啊啊啊啊！！第一版做出来后端系统电始终是2V，查了半天规格书没发现问题，结果找了一下TI的论坛才发现不止我一个人遇到，捣鼓捣鼓就有了下面这块板子，先上图！！！</p><div class="tag-plugin swiper fancybox" id="swiper-api" width="max" effect="cards"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="1.jpg" alt="1.jpg" /></div><div class="swiper-slide"><img no-lazy src="2.jpg" alt="2.jpg" /></div><div class="swiper-slide"><img no-lazy src="3.jpg" alt="3.jpg" /></div><div class="swiper-slide"><img no-lazy src="4.jpg" alt="4.jpg" /></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><p>回板了，以后要换方案也不一定，如果功率上到百瓦这颗心脏就可能顶不住了</p><div class="tag-plugin image"><div class="image-bg"><img src="6.jpg" alt="实物图" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">实物图</span></div></div><p>做了个程序 DEMO</p><div class="tag-plugin swiper fancybox" id="swiper-api" width="max" effect="cards"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="7.jpg" alt="7.jpg" /></div><div class="swiper-slide"><img no-lazy src="8.jpg" alt="8.jpg" /></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><h1 id="硬件设计"><a class="markdownIt-Anchor" href="#硬件设计"></a> 硬件设计</h1><h2 id="bq24610"><a class="markdownIt-Anchor" href="#bq24610"></a> BQ24610</h2><h3 id="特性简介"><a class="markdownIt-Anchor" href="#特性简介"></a> 特性简介</h3><blockquote><p>参考链接：<a target="_blank" rel="noopener" href="https://www.ti.com.cn/document-viewer/cn/bq24610/datasheet">https://www.ti.com.cn/document-viewer/cn/bq24610/datasheet</a><br />BQ2461x 1 节至 6 节电池的独立同步降压电池充电器控制器</p></blockquote><h3 id="特性"><a class="markdownIt-Anchor" href="#特性"></a> 特性</h3><blockquote><p>600kHz NMOS-NMOS 同步降压转换器<br />适用于锂离子或锂聚合物电池的独立充电器<br />工作输入范围为 5V 至 28V VCC，支持 1 节至 6 节电池 (BQ24610)<br />工作输入范围为 5V 至 24V VCC，支持 1 节至 5 节电池 (BQ24617)<br />充电电流和适配器电流高达 10A<br />自动选择适配器或电池作为系统电源<br />电池检测<br />FET 提供反向输入保护<br />充电使能引脚<br />适用于同步降压转换器的 6V 栅极驱动<br />关闭状态电池放电电流 &lt; 15µA<br />关闭状态输入静态电流 &lt; 1.5mA</p></blockquote><h3 id="原理图-设计"><a class="markdownIt-Anchor" href="#原理图-设计"></a> 原理图 设计</h3><p>原理图部分基本没什么大的问题有疑问可以去看我之前转载的文章</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="BQ24610锂电池充电方案 PWM直流脉冲充电 /headimg/Planck.jpg true" href="/2024/04/09/zhuan_zai_bq24610_li_dian_chi_chong_dian_fang_an_pwm_zhi_liu_mai_chong_chong_dian" cardlink autofill="icon"><div class="left"><span class="title">BQ24610锂电池充电方案 PWM直流脉冲充电 /headimg/Planck.jpg true</span><span class="cap link footnote">https://hp-l.gitee.io/2024/04/09/zhuan_zai_bq24610_li_dian_chi_chong_dian_fang_an_pwm_zhi_liu_mai_chong_chong_dian</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin image"><div class="image-bg"><img src="4.png" alt="原理图设计" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="原理图设计" href="4.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">原理图设计</span></div></div><h3 id="layout-设计指导"><a class="markdownIt-Anchor" href="#layout-设计指导"></a> Layout 设计指导</h3><p>以下来自TI官方论坛下载</p><p>BQ24610, BQ24616, BQ24617, BQ24618, and BQ24630</p><p>下面有翻译</p><div class="tag-plugin image"><div class="image-bg"><img src="1.png" alt="Layout设计指导" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="Layout设计指导" href="1.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">Layout设计指导</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="2.png" alt="Layout设计指导" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="Layout设计指导" href="2.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">Layout设计指导</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="3.png" alt="Layout设计指导" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="Layout设计指导" href="3.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">Layout设计指导</span></div></div><h4 id="指导方案"><a class="markdownIt-Anchor" href="#指导方案"></a> 指导方案：</h4><blockquote><ul><li>建议采用多层PCB。至少布置两层地面。BQ24610EVM使用4层PCB(顶层，两个信号层和底层)</li><li>将输入电容尽可能靠近QH MOSFET的漏极和QL MOSFET的源极，并使用尽可能短的铜走线连接。这些部件应该放在PCB的同一层上，而不是在不同的层上，并且应该使用过孔来进行连接。</li><li>IC应放置在开关MOSFET栅极端子附近，以保持栅极驱动信号走线短，以实现干净的MOSFET驱动。IC可以放置在PCB的另一侧，与开关mosfet分开</li><li>将电感输入端尽可能靠近开关MOSFET输出端。尽量减少该走线的铜面积，以降低电场和磁场辐射，但使走线足够宽以承载充电电流。不要使用多层并联进行此连接。最小化从该区域到任何其他走线或平面的寄生电容。</li><li>充电电流感应电阻应该放在电感输出的右边。将穿过感测电阻连接的感测引线路由回同一层的IC，彼此靠近(最小化环路面积)，并且不要将感测引线路由通过大电流路径(参见开尔文连接BQ24610数据表的图27，以获得最佳电流精度)。将去耦电容放在IC旁边的这些走线上。</li><li>将输出电容放置在感应电阻输出和接地旁边。在连接系统地之前，必须将输出电容接地连接在连接输入电容接地的同一根铜线上。</li><li>模拟地与电源地分开走线，使用单一接地连接将充电器电源地绑在充电器模拟地上。在IC下方，使用倒铜作为模拟接地，但避免电源引脚，以减少电感和电容噪声耦合。使用热垫作为单地连接点，将模拟地和电源地连接在一起。或者使用0-Ω电阻将模拟地连接到电源地(在这种情况下，热垫应连接到模拟地)。强烈建议在热垫下方采用星形连接。</li><li>将IC封装背面暴露的热垫焊到PCB接地上是至关重要的。确保IC的正下方有足够的热通孔，并与其他层的接平面相连。</li><li>将去耦电容放置在IC引脚旁边，并使走线连接尽可能短。</li><li>对于给定的电流路径，所有过孔的大小和数量必须足够。</li></ul></blockquote><h4 id="错误layout布局"><a class="markdownIt-Anchor" href="#错误layout布局"></a> 错误layout布局</h4><div class="tag-plugin image"><div class="image-bg"><img src="5.png" alt="错误layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="错误layout布局" href="5.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">错误layout布局</span></div></div><p>上图箭头是电流方向，最重大的问题应该是在于精密电阻的焊盘下方的过孔，此国控会影响BQ24610侦测电压和电流，使得输出端只能到2V。</p><h4 id="成功的第一版本layout布局"><a class="markdownIt-Anchor" href="#成功的第一版本layout布局"></a> 成功的第一版本layout布局</h4><div class="tag-plugin image"><div class="image-bg"><img src="6.png" alt="成功layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="成功layout布局" href="6.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">成功layout布局</span></div></div><p>上图是按照TI给的设计图基本完全照搬做的，输入18V成功打出18V系统电。</p><h3 id="关于充电路径"><a class="markdownIt-Anchor" href="#关于充电路径"></a> 关于充电路径</h3><div class="tag-plugin image"><div class="image-bg"><img src="7.png" alt="充电路径layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="充电路径layout布局" href="7.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">充电路径layout布局</span></div></div><p>从系统电经过表层HL MOS 电感 精密电阻 输出，这里由于有电池电压反馈，默认不插入电池该路径关闭。</p><h3 id="电池放电路径"><a class="markdownIt-Anchor" href="#电池放电路径"></a> 电池放电路径</h3><div class="tag-plugin image"><div class="image-bg"><img src="8.png" alt="放电路径layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="放电路径layout布局" href="8.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">放电路径layout布局</span></div></div><p>通过一个 NMos 输出到系统电。</p><h3 id="自举电容"><a class="markdownIt-Anchor" href="#自举电容"></a> 自举电容</h3><p>自举电容在BUCK中有关键作用</p><div class="tag-plugin image"><div class="image-bg"><img src="9.png" alt="放电路径layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="放电路径layout布局" href="9.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">放电路径layout布局</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="10.png" alt="放电路径layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="放电路径layout布局" href="10.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">放电路径layout布局</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="12.png" alt="放电路径layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="放电路径layout布局" href="12.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">放电路径layout布局</span></div></div><blockquote><p>原文翻译<br />特性描述(续)<br />上部装置总是有足够的电压保持完全接通。如果BTST引脚到PH引脚的电压低于4.2 V超过3个周期，则关闭高侧n沟道功率MOSFET，打开低侧n沟道功率MOSFET，将PH节点拉下并给BTST电容充电。然后，高侧驱动器返回到100%占空比工作，直到检测到(BTST- ph)电压再次下降，因为泄漏电流使BTST电容器放电低于4.2 V，并重新发出复位脉冲。<br />定频振荡器在输入电压、电池电压、充电电流和温度等各种条件下都能严格控制开关频率，简化了输出滤波器的设计，使其远离可听噪声区域。关于如何选择电感、电容和MOSFET，请参见应用和实现</p></blockquote><p>另一款 BUCK IC MP1484（MPS家的）规格书中写到</p><div class="tag-plugin image"><div class="image-bg"><img src="11.png" alt="放电路径layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="放电路径layout布局" href="11.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">放电路径layout布局</span></div></div><blockquote><p>原文翻译<br />转换器使用内部n沟道MOSFET开关将输入电压降压到调节的输出电压。由于高侧MOSFET需要大于输入电压的栅极电压，因此需要连接在SW和BS之间的升压电容器来驱动高侧栅极。当SW低时，升压电容器从内部5V轨道充电。</p></blockquote><h1 id="程序设计"><a class="markdownIt-Anchor" href="#程序设计"></a> 程序设计</h1><h2 id="函数说明"><a class="markdownIt-Anchor" href="#函数说明"></a> 函数说明</h2><h3 id="oled部分"><a class="markdownIt-Anchor" href="#oled部分"></a> OLED部分</h3><p>目前移植 0.91 OLED 成功</p><div class="tag-plugin image"><div class="image-bg"><img src="13.png" alt="放电路径layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="放电路径layout布局" href="13.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">放电路径layout布局</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="14.png" alt="放电路径layout布局" data-fancybox="true"/><a class="image-download blur" style="opacity:0" target="_blank" download="放电路径layout布局" href="14.png"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">放电路径layout布局</span></div></div><h2 id="还没写完"><a class="markdownIt-Anchor" href="#还没写完"></a> <em>还没写完…</em></h2><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="作品" scheme="https://hp-l.gitee.io/categories/%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="机器之脉络" scheme="https://hp-l.gitee.io/tags/%E6%9C%BA%E5%99%A8%E4%B9%8B%E8%84%89%E7%BB%9C/"/>
    
    <category term="bq24610" scheme="https://hp-l.gitee.io/tags/bq24610/"/>
    
    <category term="PMIC" scheme="https://hp-l.gitee.io/tags/PMIC/"/>
    
  </entry>
  
  <entry>
    <title>kivy制作跨平台软件</title>
    <link href="https://hp-l.gitee.io/2024/04/24/kivy_zhi_zuo_kua_ping_tai_ruan_jian/"/>
    <id>https://hp-l.gitee.io/2024/04/24/kivy_zhi_zuo_kua_ping_tai_ruan_jian/</id>
    <published>2024-04-24T05:12:51.000Z</published>
    <updated>2024-04-30T04:32:51.782Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="kivy相关链接"><a class="markdownIt-Anchor" href="#kivy相关链接"></a> kivy相关链接</h1><blockquote><p><a target="_blank" rel="noopener" href="https://kivy.org/">https://kivy.org/</a><br /><a target="_blank" rel="noopener" href="https://cycleuser.gitbooks.io/kivy-guide-chinese/content/">https://cycleuser.gitbooks.io/kivy-guide-chinese/content/</a></p></blockquote><h1 id="编程环境"><a class="markdownIt-Anchor" href="#编程环境"></a> 编程环境</h1><h2 id="anaconda"><a class="markdownIt-Anchor" href="#anaconda"></a> Anaconda</h2><p>下载链接</p><blockquote><p><a target="_blank" rel="noopener" href="https://docs.anaconda.com/free/anaconda/install/">https://docs.anaconda.com/free/anaconda/install/</a></p></blockquote><h2 id="建立工程文件夹"><a class="markdownIt-Anchor" href="#建立工程文件夹"></a> 建立工程文件夹</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir test</span><br><span class="line">cd test</span><br><span class="line">conda create -n kivy-study python=3.7</span><br></pre></td></tr></table></figure><h2 id="安装一些依赖"><a class="markdownIt-Anchor" href="#安装一些依赖"></a> 安装一些依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install kivy</span><br><span class="line">pip install buildozer</span><br><span class="line">pip install Cython</span><br></pre></td></tr></table></figure><h1 id="初始化文件夹"><a class="markdownIt-Anchor" href="#初始化文件夹"></a> 初始化文件夹</h1><p><code>buildozer init</code><br />初始化生成配置文件<code>buildozer.spec</code><br /><img src="2.png" alt="2.png" /></p><h1 id="打包apk"><a class="markdownIt-Anchor" href="#打包apk"></a> 打包apk</h1><p>写一个 demo 文件</p><figure class="highlight py"><figcaption><span>main.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> kivy</span><br><span class="line"><span class="keyword">from</span> kivy.app <span class="keyword">import</span> App</span><br><span class="line"><span class="keyword">from</span> kivy.uix.button <span class="keyword">import</span> Button</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">hellokivy</span>(<span class="title class_ inherited__">App</span>) :</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">build</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> Button(text=<span class="string">&quot;hellokivy&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span> :</span><br><span class="line">    hellokivy().run()</span><br></pre></td></tr></table></figure><blockquote><p>时间十分漫长，一言难尽<br />buildozer -v android debug<br />成功将会出现 <code># Android packaging done! # APK myapp-0.1-arm64-v8a_armeabi-v7a-debug.apk available in the bin directory</code></p></blockquote><p><img src="1.png" alt="1.png" /></p><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="应用" scheme="https://hp-l.gitee.io/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="python" scheme="https://hp-l.gitee.io/tags/python/"/>
    
    <category term="kivy" scheme="https://hp-l.gitee.io/tags/kivy/"/>
    
    <category term="多平台" scheme="https://hp-l.gitee.io/tags/%E5%A4%9A%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>beeware 参考</title>
    <link href="https://hp-l.gitee.io/2024/04/23/beeware_can_kao/"/>
    <id>https://hp-l.gitee.io/2024/04/23/beeware_can_kao/</id>
    <published>2024-04-23T10:17:16.000Z</published>
    <updated>2024-04-30T04:32:51.781Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="参考链接"><a class="markdownIt-Anchor" href="#参考链接"></a> 参考链接</h1><p><a target="_blank" rel="noopener" href="https://docs.beeware.org/zh-cn/latest/">https://docs.beeware.org/zh-cn/latest/</a></p><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="https://hp-l.gitee.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="python" scheme="https://hp-l.gitee.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>【转载】BQ24610锂电池充电方案 PWM直流脉冲充电</title>
    <link href="https://hp-l.gitee.io/2024/04/09/zhuan_zai_bq24610_li_dian_chi_chong_dian_fang_an_pwm_zhi_liu_mai_chong_chong_dian/"/>
    <id>https://hp-l.gitee.io/2024/04/09/zhuan_zai_bq24610_li_dian_chi_chong_dian_fang_an_pwm_zhi_liu_mai_chong_chong_dian/</id>
    <published>2024-04-09T01:17:50.000Z</published>
    <updated>2024-04-30T04:32:51.791Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="bq24610锂电池充电方案-pwm直流脉冲充电-souha-博客园"><a class="markdownIt-Anchor" href="#bq24610锂电池充电方案-pwm直流脉冲充电-souha-博客园"></a> BQ24610锂电池充电方案 PWM直流脉冲充电 - souha - 博客园</h1><hr /><ul><li><a target="_blank" rel="noopener" href="https://www.cnblogs.com/since1996/p/13625960.html">https://www.cnblogs.com/since1996/p/13625960.html</a></li><li>2024-04-09 09:14:13</li></ul><hr /><p>BQ24610锂电池充电方案 PWM直流脉冲充电</p><h2 id="1概述"><a class="markdownIt-Anchor" href="#1概述"></a> 1.概述</h2><p>随着移动电话、笔记本电脑、平板电脑等众多便携式电子设备的迅速普及应用，与之配套的小型锂离子电池、锂聚合物电池等二次电池的生产及需求量与日俱增，特别是锂离子电池体积小、重量轻;循环寿命长、充电可达几百次甚至上千次;自放电率低等优点广泛应用于可移动便携式电子产品中。因此，设计一套高精度锂离子充电管理系统对于锂离子电池应用是至关重要的，严格防止在电池的使用中出现过充电、过放电等现象。<br />　　目前比较成熟的锂电池充电管理方案就是基于笔记本电脑的方案，该类电源管理方案已经接近成熟，但是往往成本较高，不太符合应用于便携式分子筛制氧机设计中。结合成本与性能的考虑，最后我们选择BQ24610芯片作为主芯片，结合外围电路，来设计便携式分子筛制氧机电源管理模块。<br />　　BQ24610是TI公司生产，可以实现5V-28V锂电池充电管理。充电控制器与传统的控制器相比较，效率更高，散热更少;充电电压及电流的准确度接近百分之百，有助于延长电池使用寿命;集成型独立解决方案可提高设计灵活性，缩小整体解决方案尺寸，更有利于广泛应用于便携式设备中;动态电源管理可在电池充电时仍可为系统供电，最大限度地提高适配器功率.本文就通过在实际中的探索，对电池充电控制器和选择器芯片BQ24610的基本性能、工作原理、参数设置及应用中出现的问题进行了分析，给出了相应的典型应用电路设计。</p><p><img src="1.png" alt="1.png" /></p><h2 id="2bq24610功能及特性"><a class="markdownIt-Anchor" href="#2bq24610功能及特性"></a> 2.BQ24610功能及特性</h2><h3 id="21-引脚介绍"><a class="markdownIt-Anchor" href="#21-引脚介绍"></a> 2.1 引脚介绍</h3><p>ACN(引脚1)：适配器电流误差放大器负输入。<br />ACP (引脚2)：适配器电流误差放大器正输入。<br />ACDRV (引脚3)：交流适配器到系统MOSFET驱动器输出。</p><p>ISET1(引脚11)：快速充电电流输入设置。<br />ISET2 (引脚15)：预充电和终止当前输入设置。<br />ACSET(引脚16)：适配器当前输入设置。</p><p>VREF(引脚10)：3.3V参考电压输出。<br />CE(引脚4)：充电使能，逻辑高电平输入。高电平充电时能，低电平停止充电，它有一个1MΩ内部下拉电阻。</p><p>STAT1(引脚5)：漏极开路充电状态指示按钮，指示各种充电操作。<br />STAT2(引脚9)：漏极开路充电状态指示按钮，指示各种充电操作。<br />PG(引脚8)：开漏输出状态良好指示。</p><p>TS(引脚6)：电池组温度CP系数检测。</p><p>BATDRV (引脚23)：电池和系统之间的MOSFET驱动输出。防止电流从系统流向电池，将系统与电池隔离。<br />HIDRV(引脚21)：PWM高压侧驱动器输出。<br />PH(引脚20)：PWM高压侧驱动器负极电源。<br />BTST(引脚22)：PWM高压侧驱动器正极电源。<br />REGN(引脚18)：PWM低压侧驱动器正6伏电源输出。<br />LODRV(引脚19)：PWM低压侧驱动器输出。</p><p>SRP(引脚14)：电池电流误差放大器正输入。<br />SRN(引脚13)：电池电流误差放大器负输入。</p><p>VFB(引脚12)：输出电压模拟反馈调整。</p><p>TTC(引脚7)：安全时间和终止控制。</p><p>VCC(引脚24)<br />GND(引脚17)</p><p><img src="2.png" alt="2.png" /></p><h3 id="22-工作原理"><a class="markdownIt-Anchor" href="#22-工作原理"></a> 2.2 工作原理</h3><p>锂离子电池的充电过程可以分为三个阶段：涓流充电（低压预充电）、恒流充电、恒压充电。<br />锂电池的充电方式是限压恒流，都是由IC芯片控制的，典型的充电方式是：先检测待充电电池的电压，如果电压低于3V，要先进行预充电，充电电流为设定电流的1/10，电压升到3V后，进入标准充电过程。</p><p>标准充电过程为： 以设定电流进行恒流充电，电池电压升到4.20V时，改为恒压充电，保持充电电压为 4.20V。此时，充电电流逐渐下降，当电流下降至设定充电电流的1/10时，充电结束</p><p>BQ24610充电电路工作原理如图2所示，该充电电路基本工作原理可分为预充、快充和终止阶段。<br />当接通电源，如果VBAT<br />　　快充分恒流充电和恒压充电两个阶段，在该充电阶段，恒流充电电流不变，电压持续上升，当电压达到调节电压时，充电进入恒压充电阶段。在恒压阶段，充电电流逐渐减小，BQ24610负责管理充电电流。在VTT有效情况下，如果VVFB&gt;VRECH,并且ICHARGE<br />　　BQ24610能够自动选择适配器或者电池给负载供电，当处于上电状态或者睡眠模式的时候，电池连到负载。当电池跳出睡眠模式30ms,电池自动与负载断开，适配器与电池相连。一个自动闭合逻辑防止转换器转换的时候电流击穿。每次确保输出电容或者电源转换器没有充或击穿之后，进入快速充电模式，充电器自动软启动充电器调节电流。</p><h2 id="3便携式制氧机中的锂离子电池充电管理系统的设计与应用"><a class="markdownIt-Anchor" href="#3便携式制氧机中的锂离子电池充电管理系统的设计与应用"></a> 3.便携式制氧机中的锂离子电池充电管理系统的设计与应用</h2><p>依据参数要求，我们结合BQ24610的特性设计了一套适合四节锂离子电池的充放电系统，电路图如图3所示。该系统是给便携式分子筛制氧机供电，实现了以下设计：</p><p><img src="3.png" alt="3.png" /></p><h3 id="31-适配器或电池供电的设计"><a class="markdownIt-Anchor" href="#31-适配器或电池供电的设计"></a> 3.1 适配器或电池供电的设计</h3><p>主要通过两个P沟道的MOSFET实现。BQ24610能够自动控制实现适配器或者电池给负载供电，当系统启动或者进入睡眠模式时，电池默认与系统连接，当退出休眠模式30ms,电池自动与系统断开，适配器与系统连接。每次进入快速充电，当确定没有过充、输出电容和电源转换器没有过压现象时，系统自动软启动充电电流管理。当CE引脚的状态指示灯亮表明系统进入充电使能状态。</p><h3 id="32-锂电池的电量检测与充电指示设计"><a class="markdownIt-Anchor" href="#32-锂电池的电量检测与充电指示设计"></a> 3.2 锂电池的电量检测与充电指示设计</h3><p>通过分压法采集电池电量AD信号，通过I/O口传输给单片机，单片机对信号进行处理做出反应。电池充电状态的显示是通过两个LED灯(STAT1、STAT2)，实现充电与充电完成状态显示。当SRN与SRP之间的电压低于5mv时，芯片自动控制进入周期循环充电潜流保护，这能够阻止引起提振效应的负面感应电流。提振效应能够随着电池到输入电容的输入电压增大，导致VCC引脚过压，引起系统损坏。输入过压和低压保护，能够有效的预防过压或低压对系统造成的损坏。电池的过压保护，充电电流过流保护，热关机保护等一系列的保护措施能够大大提高系统的安全性。</p><h3 id="33-系统电压低于12v时系统自动关机的设计"><a class="markdownIt-Anchor" href="#33-系统电压低于12v时系统自动关机的设计"></a> 3.3 系统电压低于12V时系统自动关机的设计</h3><p>通过一个含有最大限制电压是30V的P沟道MOSFET和一个分流基准源实现，在此部分电路中电阻R43,R44需要满足12*R44/(R43+R44)=2.5,经计算取R43=38K,R44=10K3.4 系统按键开关的设计<br />　　含有按键开关的S1部分能够实现该功能，主要原理如下：按钮按下前，VT2的GS电压(即C1电压)为零，VT2截止，V1的GS电压为零，V1截止无输出;当按下S1,C1充电，VT GS电压上升至约3V时VT2导通，并迅速饱和，V1 GS电压小于-4V,V1饱和导通，VOUT有输出，发光管亮，C1通过R6、R12继续充电，V1、VT2状态被锁定;当再次按下按钮时，由于VT2处于饱和导通状态，漏极电压约为0VC1通过R3放电，方至约3V时，VT2截止，V1栅源电压大于-4V,V1截止，VOUT无输出，发光管灭，C1通过R6、R12及外电路继续放电，V1、VT2维持截止状。</p><h3 id="35-电流电压参数的设计"><a class="markdownIt-Anchor" href="#35-电流电压参数的设计"></a> 3.5 电流电压参数的设计</h3><h4 id="351-充电电压设计"><a class="markdownIt-Anchor" href="#351-充电电压设计"></a> 3.5.1 充电电压设计</h4><p>电池充电调整电压VBAT通过电池和地之间的电阻进行设定，从中间部分与VFB引脚相连。</p><p><img src="4.png" alt="4.png" /></p><p>R2在VFB和电池之间，R1在电池和地之间。</p><h4 id="352-充电电流的设计"><a class="markdownIt-Anchor" href="#352-充电电流的设计"></a> 3.5.2 充电电流的设计</h4><p>ISET1输入设置最大快速充电电流。蓄电池充电电流由连接在SRP和SRN之间的电阻器R SR感测。SRP和SRN之间的满标度差分电压为100mv。因此，对于10-mΩ感应电阻器，最大充电电流为10 A。充电电流的方程式为：</p><p><img src="5.png" alt="5.png" /></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>I</mi></msub><mi>S</mi><mi>E</mi><mi>T</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">V_ISET1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>S</mi><mi>E</mi><mi>T</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">ISET1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">1</span></span></span></span>的输入电压范围为0 V至2 V。SRP和SRN引脚用于感应R SR上的电压，默认值为10 mΩ。但是，也可以使用其他值的电阻器。更高的准确度和更高的电阻感，但更大的损失。</p><h4 id="353-适配器输入电流的设计"><a class="markdownIt-Anchor" href="#353-适配器输入电流的设计"></a> 3.5.3 适配器输入电流的设计</h4><p>来自交流适配器AC或其他直流电源的总输入是系统电源电流和蓄电池充电电流的总和。系统电流通常随着部分系统通电或断电而波动。没有DPM，电源必须能够同时提供最大系统电流和最大充电电流。而使用DPM，当输入电流超过ACSET设定的输入电流限制时，电池充电器可降低充电电流，降低系统损耗。与设置电池充电电流类似，适配器电流由连接在ACP和ACN之间的电阻器RAC感应。其最大值由ACSET使用方程式3设定：</p><p><img src="6.png" alt="6.png" /></p><p>V ACSET，ACSET的输入电压范围为0 V至2 V。ACP和ACN引脚用于感应交流电压，默认值为10 mΩ。但是，也可以使用其他值的电阻器。感测电阻越大，感应电压越大，调节精度也越高，但以较高的传导损耗为代价。</p><h4 id="354-预充电电流的设计"><a class="markdownIt-Anchor" href="#354-预充电电流的设计"></a> 3.5.4 预充电电流的设计</h4><p>通电时，如果蓄电池电压低于V低电压阈值，bq2461x会向蓄电池施加预充电电流。此功能旨在使深度放电的细胞复活。如果在启动预充电后30分钟内未达到V低电压阈值，充电器将关闭，状态引脚上会显示故障。预充电电流由ISET2引脚上的电压V ISET2决定。</p><p><img src="7.png" alt="7.png" /></p><h4 id="355-充电终止电流-安全计时器"><a class="markdownIt-Anchor" href="#355-充电终止电流-安全计时器"></a> 3.5.5 充电终止电流、安全计时器</h4><p>bq2461x在电压调节阶段监控充电电流。当V TTC有效时，当VFB管脚上的电压高于V RECH阈值且充电电流小于I项阈值时检测到终端，如等式5所计算：</p><p><img src="8.png" alt="8.png" /> (充电终止电流)</p><p>ISET2的输入电压为0 V至2 V。使用默认的10 mΩ感应电阻器，最小预充电/端接电流钳制在125 mA左右。作为安全备份，bq2461x还提供了一个可编程的充电计时器。充电时间由连接在TTC引脚和GND之间的电容器编程，由等式6给出:</p><p><img src="9.png" alt="9.png" /></p><p>其中,K TTC是常数，K TTC=5.6 min/nF。<br />当出现以下任一情况时，将启动新的充电循环并重置安全计时器：<br />•电池电压低于充电阈值。<br />•发生上电复位（POR）事件。<br />•CE已切换。<br />TTC引脚可能被调低以禁用终端和安全定时器。如果TTC被拉到VREF，bq2461x继续允许终止，但禁用安全计时器。TTC取低重置安全计时器。什么时候ACOV、VCCLOWV和休眠模式恢复正常，安全计时器复位。</p><h4 id="356-vcc上电"><a class="markdownIt-Anchor" href="#356-vcc上电"></a> 3.5.6 VCC上电</h4><p>bq2461x使用休眠比较器来确定VCC引脚上的电源，因为VCC可以由电池或适配器供电。如果VCC电压大于SRN电压，bq2461x启用ACFET并禁用BATFET。如果满足所有其他充电条件，bq2461x将尝试对电池充电（请参阅启用和禁用充电）。</p><p>如果SRN电压大于VCC，表明电池是电源，bq2461x启动BATFET并进入低静态电流（&lt;15μa）休眠模式，以最大限度地减少电池的电流消耗。如果VCC低于UVLO阈值，则设备被禁用，ACFET关闭，BATFET打开。</p><h4 id="357-启用和禁用充电"><a class="markdownIt-Anchor" href="#357-启用和禁用充电"></a> 3.5.7 启用和禁用充电</h4><p>启用充电前，以下条件必须有效：</p><pre><code>•CE高。•设备未处于欠压锁定（UVLO）和VCCLOWV模式。•设备未处于睡眠模式。•VCC电压低于交流过电压阈值（VCC&lt;V ACOV）。•初始通电后30 ms延迟完成。•REGN LDO和VREF LDO电压处于正确水平。•热关机（TSHUT）无效。•未检测到TS故障。</code></pre><p>下列情况之一将停止持续充电：</p><pre><code>•CE低。•适配器已卸下，导致设备进入UVLO、VCCLOWV或睡眠模式。•适配器电压过高。•REGN或VREF LDO过载。•t达到关闭IC温度阈值（上升沿145°C，滞后15°C）。•TS电压超出范围，表明电池温度过高或过低。•TTC安全计时器超时。</code></pre><h4 id="358-系统电源选择器"><a class="markdownIt-Anchor" href="#358-系统电源选择器"></a> 3.5.8 系统电源选择器</h4><p>bq2461x自动将适配器或电池电源切换到系统负载。在开机或休眠模式下，电池默认连接到系统。电池与系统断开连接，然后适配器在退出休眠30毫秒后连接到系统。一个自动断开-关合逻辑可防止选择器切换时的击穿电流。</p><p>ACDRV用于驱动适配器和ACP之间的一对背靠背P沟道功率MOSFET，S极连接在一起并连接到VCC。连接到适配器上的FET防止电池在关闭时向适配器反向放电。与肖特基二极管相比，带有漏极连接到适配器输入端的P沟道FET在关闭时提供反向电池放电保护；同时，与肖特基二极管相比，它的低Rds（on）  (MOS管导通电阻)也使系统功耗最小化。另一个连接到ACP的Pmos将电池与适配器分离，并通过控制FET开启时间在将适配器连接到系统时提供有限的dI/dt。BATDRV控制一个位于BAT和系统之间的P沟道功率MOSFET。</p><p>当没有检测到适配器时，ACDRV被拉到VCC以保持ACFET关闭，断开适配器与系统的连接。BATDRV保持ACN-6V电压，将电池连接至系统。</p><p>在设备从休眠模式出来大约30毫秒后，系统开始从电池切换到适配器。先断后合逻辑使ACFET和BATFET在ACFET开启前关闭10µs。这防止了射电电流或任何大放电电流进入电池。BATDRV被拉至ACN，ACDRV引脚由内部调节器设置为VCC-6V，以打开P通道ACFET，将适配器连接到系统。</p><p>卸下适配器后，系统将等待VCC降至SRN以上200 mV以内，然后从适配器切换回电池。先断后合逻辑仍保持10μs的死区时间。ACDRV被拉至VCC，BATDRV引脚由内部调节器设置为ACN-6V，以打开P通道BATFET，将电池连接至系统。</p><p>用于ACDRV和BATDRV驱动器的非对称栅极驱动（快速关断和慢导通）提供ACFET和BATFET的快速关断和慢导通，以帮助实现先断后合逻辑，并允许在任一FET接通时软启动。通过在P沟道功率mosfet的栅极到源端放置电容器，可以进一步提高软启动时间。</p><h4 id="359-自动内部软启动充电器电流"><a class="markdownIt-Anchor" href="#359-自动内部软启动充电器电流"></a> 3.5.9 自动内部软启动充电器电流</h4><p>每次充电器快速充电时，充电器都会自动软启动充电器调节电流，以确保输出电容器或电源转换器没有过冲或应力。软启动包括将充电调节电流分为八个等分步骤，直到编程的充电电流。每个步骤持续约1.6毫秒，典型上升时间为12.8毫秒。此功能不需要外部组件。</p><h4 id="3510-变频器操作"><a class="markdownIt-Anchor" href="#3510-变频器操作"></a> 3.5.10 变频器操作</h4><p>同步buck-PWM变换器采用固定频率电压模式和前馈控制方案。III型补偿网络允许在转换器的输出端使用陶瓷电容器。补偿输入级内部连接在反馈输出（FBO）和误差放大器输入（EAI）之间。反馈补偿级连接在误差放大器输入（EAI）和误差放大器输出之间<br />（EAO）。选择LC输出滤波器，使bq2461x的谐振频率为12 kHz至17 kHz，其中谐振频率f o由以下公式给出：</p><p><img src="10.png" alt="10.png" /></p><p>将内部锯齿形斜坡与内部EAO错误控制信号进行比较，以改变转换器的占空比。斜坡高度为输入适配器电压的7%，使其始终与输入适配器电压成正比。这消除了由于输入电压变化而引起的任何环路增益变化，并简化了环路补偿。当占空比小于300%时，允许斜坡信号的占空比为300%。EAO信号也允许超过锯齿波斜坡信号，以获得100%的占空比PWM请求。内部门驱动逻辑允许实现99.5%的占空比，同时确保N通道上部设备始终有足够的电压保持完全开启。如果BTST引脚到PH引脚的电压下降到4.2 V以下超过3个周期，则高侧N沟道功率MOSFET关闭，低侧N沟道功率MOSFET被打开，以拉低PH节点电位并对BTST电容器充电。然后，高压侧驱动器返回到100%占空比(通电时间占比)运行，直到检测到（BTST-PH）电压再次下降，因为泄漏电流使BTST电容器放电低于4.2V，然后重新发出复位脉冲。固定频率振荡器在输入电压、电池电压、充电电流和温度的所有条件下都能严格控制开关频率，简化了输出滤波器的设计，并使其远离可听见的噪声区域。另请参阅应用和实施，了解如何选择电感器、电容器和MOSFET。</p><h4 id="3511-同步和非同步运行"><a class="markdownIt-Anchor" href="#3511-同步和非同步运行"></a> 3.5.11 同步和非同步运行</h4><p>当SRP-SRN电压高于5 mV（10 mΩ感应电阻器的电感电流为0.5 A）时，充电器以同步模式工作。在同步模式下，内部门驱动逻辑确保在进行互补切换之前有断路，以防止击穿电流。在两个fet都关闭的30ns死区时间内，低侧功率MOSFET的体二极管传导电感电流。有低边场效应晶体管打开保持低功耗，并允许在高电流安全充电。在同步模式下，电感器电流始终流动，转换器以连续导通模式（CCM）运行，<br />创建固定的两极系统。<br />当SRP-SRN电压低于5 mV（10 mΩ感应电阻器的电感电流为0.5 A）时，充电器以非同步模式工作。当电池电压低于2 V或SRP-SRN平均电压低于1.25 mV时，充电器被迫进入非同步模式。<br />在非同步工作时，下侧MOSFET的体二极管可以在高侧N沟道功率MOSFET关断后导通正电感电流。当负载电流降低，电感器电流降到零时，体二极管关闭，电感器电流不连续。这种模式称为不连续传导模式（DCM）。在DCM过程中，当自举电容电压下降到4.2V以下时，低侧N沟道功率MOSFET打开约80ns；然后低压侧功率MOSFET关闭并保持关闭状态，直到下一个循环开始，此时高压侧功率MOSFET再次打开。80纳秒的低侧MOSFET通电时间要求，以确保引导电容始终充电，并能够保持高侧功率MOSFET在下一个循环中接通。这对电池充电器很重要，不像普通的DC-DC转换器，有一个电池负载可以维持电压，并且可以产生和吸收电流。80ns的低压侧脉冲拉低PH节点（高、低压侧MOSFET之间的连接），允许自举电容器重新充电到REGN LDO值。80ns后，低侧MOSFET保持关闭，以防止出现负电感电流。<br />在非同步运行期间的极低电流下，80ns充电脉冲期间可能会有少量的负电感电流。电荷应足够低，以被输入电容吸收。每当转换器进入0%的占空比时，高侧MOSFET不导通，低侧MOSFET也不导通（只有80ns充电脉冲），电池几乎没有放电。<br />在DCM模式下，回路响应会自动改变，并且有一个极点与负载电流成比例的单极系统，因为转换器不吸收电流，只有负载提供电流汇。这意味着在非常低的电流下，回路响应较慢，因为可以释放输出电压的陷波电流较少。</p><h4 id="3512-循环充电欠电流保护"><a class="markdownIt-Anchor" href="#3512-循环充电欠电流保护"></a> 3.5.12 循环充电欠电流保护</h4><p>如果SRP-SRN电压降低到5 mV以下（当平均SRP-SRN电压低于1.25 mV时，充电器也被迫进入非同步模式），则在剩余的开关周期内关闭低压侧FET，以防止出现负电感电流。在DCM过程中，当自举电容电压降到4.2v以下时，低侧FET只开启约80ns，为自举电容提供刷新电荷。这对于防止负电感器电流引起输入电压升高的升压效应非常重要，因为电源从电池传输到输入电容器，导致VCC节点上的过电压应力，并可能导致系统损坏。</p><h4 id="3513-输入过压保护acov"><a class="markdownIt-Anchor" href="#3513-输入过压保护acov"></a> 3.5.13 输入过压保护（ACOV）</h4><p>ACOV提供保护，防止高输入电压导致系统损坏。一旦适配器电压达到ACOV阈值，充电将被禁用，系统将切换到电池而不是适配器。</p><h4 id="3514-输入欠压锁定uvlo"><a class="markdownIt-Anchor" href="#3514-输入欠压锁定uvlo"></a> 3.5.14 输入欠压锁定(UVLO)</h4><p>系统必须具有最小VCC电压，以允许正常工作。此VCC电压可能来自输入适配器或电池，因为存在从电池到VCC的传导路径，通过高压侧NMOS主体二极管。当VCC低于UVLO阈值时，IC上的所有电路都被禁用，ACFET和BATFET的栅极驱动偏置也被禁用。</p><h4 id="3515-电池过电压保护"><a class="markdownIt-Anchor" href="#3515-电池过电压保护"></a> 3.5.15 电池过电压保护</h4><p>转换器不允许高侧场效应晶体管打开，直到电池电压低于102%的调节电压。这允许对过电压条件作出一个周期的响应，例如在卸下负载或断开蓄电池时发生的情况。从SRP到GND的8毫安电流接收器仅在充电期间打开，并允许将存储的输出电感器能量放电到输出电容器。BATOVP还暂停了安全计时器。</p><h4 id="3516-循环充电过电流保护"><a class="markdownIt-Anchor" href="#3516-循环充电过电流保护"></a> 3.5.16 循环充电过电流保护</h4><p>充电器具有二次循环对循环过电流保护。它监控充电电流，防止电流超过编程充电电流的160%。当检测到过电流时，高压侧栅极驱动关闭，当电流降至过电流阈值以下时自动恢复驱动。</p><h4 id="3517-热关断保护"><a class="markdownIt-Anchor" href="#3517-热关断保护"></a> 3.5.17 热关断保护</h4><p>QFN封装具有低的热阻抗，从硅到环境提供良好的热传导，以保持结温低。作为附加保护级别，每当结温超过145°C的TSHUT阈值时，充电器转换器关闭并自我保护。充电器保持关闭状态，直到结温降至130°C以下；然后，如果所有其他启用充电条件都有效，充电器将再次软启动。热关机也会暂停安全计时器。</p><h4 id="3518-温度限定条件"><a class="markdownIt-Anchor" href="#3518-温度限定条件"></a> 3.5.18 温度限定条件</h4><p>控制器通过测量TS引脚和GND之间的电压来持续监测电池温度。负温度系数热敏电阻（NTC）和外部分压器通常产生这种电压。控制器将该电压与其内部阈值进行比较，以确定是否允许充电。要启动充电循环，电池温度必须在V LTF至V HTF阈值范围内。如果电池温度超出此范围，控制器将暂停充电和安全计时器，并等待电池温度在V LTF到V HTF范围内。在充电周期内，电池温度必须在V LTF到V TCO阈值范围内。如果电池温度超出该范围，控制器将暂停充电并等待，直到电池温度在V LTF至V HTF范围内。控制器通过关闭PWM充电fet来暂停充电。图14总结了该操作。</p><p><img src="11.png" alt="11.png" /></p><p>假设电池组上有一个103AT的NTC热敏电阻，如图19所示，可使用以下公式确定值RT1和RT2：</p><p><img src="12.png" alt="12.png" /></p><p>例如，103AT NTC热敏电阻用于监测电池组温度。选择T冷=0ºC，T截止=45ºC；则R T2=430 kΩ，R T1=9.31 kΩ。建议使用小型RC滤波器进行系统级ESD保护。</p><p><img src="13.png" alt="13.png" /></p><h4 id="3519-计时器故障恢复"><a class="markdownIt-Anchor" href="#3519-计时器故障恢复"></a> 3.5.19 计时器故障恢复</h4><p>bq2461x提供了一种恢复方法来处理定时器故障情况。下文对此进行了总结<br />方法：<br />情况1：蓄电池电压高于充电阈值，出现超时故障。恢复方法：当电池电压低于充电阈值时，定时器故障清除，电池检测开始。采用CE低或POR条件也可以清除故障。<br />情况2：蓄电池电压低于充电阈值，出现超时故障。恢复方法：在这种情况下，bq2461x对电池施加I故障电流。此小电流用于检测蓄电池拆卸情况，只要蓄电池电压保持在充电阈值以下，该电流就会保持接通。如果电池电压高于充电阈值，bq2461x将禁用故障电流并执行条件1中所述的恢复方法。采用CE低或POR条件也可以清除故障。</p><h4 id="3520-ce充电使能"><a class="markdownIt-Anchor" href="#3520-ce充电使能"></a> 3.5.20 CE（充电使能）</h4><p>开路漏极PG（功率良好）输出指示VCC电压是否有效。当bq2461x有一个有效的VCC输入（不在UVLO、ACOV或睡眠模式下）时，开路漏极FET就会打开。PGpin可用于驱动LED或与主机处理器通信。</p><h4 id="3521-充电状态"><a class="markdownIt-Anchor" href="#3521-充电状态"></a> 3.5.21 充电状态</h4><p>CE数字输入用于禁用或启用充电过程。如果满足所有其他充电条件，此引脚上的高电平信号将启用充电（请参阅启用和禁用充电）。此引脚上的高到低转换也会重置所有计时器和故障条件。CE引脚上有一个内部1 MΩ下拉电阻器，因此如果CE浮动，充电不会开启。</p><h4 id="3522-电池检测输出"><a class="markdownIt-Anchor" href="#3522-电池检测输出"></a> 3.5.22 电池检测输出</h4><p>开路漏极STAT1和STAT2输出指示各种充电器操作，如表2所示。这些状态引脚可用于驱动LED或与主机处理器通信。关表示开漏晶体管关断。</p><p><img src="14.png" alt="14.png" /></p><h2 id="4结论"><a class="markdownIt-Anchor" href="#4结论"></a> 4.结论</h2><p>通过试验结果分析，充电电压在12.6V左右浮动，准确度超过95%,充电电流在3A左右浮动，准确度超过99%.系统的输入过压过流保护、电池的过压、过流保护，高温保护准确度达到了99%.经过多次试验该电路能其要求的功能。<br />　　本文系统地分析了锂离子电池充电控制集成电路芯片应用中常用到的技术问题，并给出了在便携式制氧机中的典型应用实例。根据系统对电池的应用需求，通过合理设置BQ24610的外部元件参数，就可构成一个功能完备的锂离子电池充电器。该设计能够很好的实现系统锂离子电池充电器的功能，可作为有关设计人员对电池充电器进一步开发的参考。该类集成芯片系列较多，但在使用方法上存在许多类似之处，这使得本文的分析讨论在实际应用中具有重要的实用价值和参考价值，为电池充电电路设计者提供了有用的参考，同时也可为其他电子元件的应用提供参考。</p><p>应用电路图</p><p><img src="15.png" alt="15.png" /></p><h1 id="pcb设计"><a class="markdownIt-Anchor" href="#pcb设计"></a> PCB设计</h1><p>官方建议</p><p>开关节点的上升和下降时间应最小化，以使开关损耗最小。部件的合理布局以尽量减少高频电流路径回路（见图23）对于防止电磁场辐射和高频共振问题非常重要。下面是一个正确布局的PCB布局优先级列表。根据这个特定的顺序来布置PCB是必要的。</p><ol><li>将输入电容器尽可能靠近开关MOSFET电源和接地连接，并使用尽可能短的铜迹线连接。这些零件应该放在PCB的同一层上，而不是放在不同的层上，并使用通孔进行连接。</li><li>集成电路应放置在靠近开关MOSFET栅极端子的地方，以保持栅极驱动信号的轨迹较短，以便进行干净的MOSFET驱动。集成电路可以放置在开关MOSFET的PCB层的背面。</li><li>将电感器输入端尽可能靠近开关MOSFET输出端。尽可能减小该轨迹的铜面积，以降低电场和磁场辐射，但应使该轨迹足够宽以承载充电电流。请勿将多层并行用于此连接。最小化从这个区域到任何其他轨迹或平面的寄生电容。</li><li>电流采样电阻应该放在电感输出的旁边。将穿过采样电阻的感测引线布线回同一层中的IC，彼此靠近（尽量减少回路面积），不要将感测引线穿过高电流路径（有关最佳电流精度的开尔文连接，请参见图24）。将去耦电容器放在IC旁边。</li><li>将输出电容器放在感应电阻输出和接地旁边。</li><li>在连接到系统接地之前，输出电容器必须与连接到输入电容共地。</li><li>将模拟地(AGND)与电源地(GND)分开布线，并使用一个接地连接将GND连接到AGND。就在集成电路下面，使用铺铜模拟接地，但要避免电源引脚，以减少感应和电容噪声耦合。将AGND连接到GND。使用热垫作为单个接地连接点，将AGND和GND连接在一起。或者使用一个0Ω的电阻将AGND连接到GND（在这种情况下，热垫应连接到AGND）。强烈建议在热垫下使用星形连接。</li><li>将IC封装背面裸露的热焊盘焊接到PCB地上，这是至关重要的。确保IC正下方有足够的热通孔，连接到其他层的接地层。</li><li>将去耦电容器放在IC引脚旁边，并使跟踪连接尽可能短。</li><li>所有过孔的大小和数量必须足以满足给定的当前路径</li></ol><h2 id="pcb一般要求"><a class="markdownIt-Anchor" href="#pcb一般要求"></a> PCB一般要求</h2><p>除此之外还要注意电流与线宽、铜厚之间的关系</p><p><img src="16.png" alt="16.png" /></p><p>差分线:</p><p>尽量减少高频电流路径回路</p><p><img src="17.png" alt="17.png" /></p><p>bq2461x设备是一个独立的集成锂离子或锂聚合物电池充电器。该装置采用开关频率恒定的开关模式同步降压PWM控制器。该设备控制外部开关，以防止电池放电回输入，连接适配器到系统，并使用6伏栅极驱动器将电池连接到系统，以提高系统效率。bq2461x的特点是动态电源管理(DPM)，当达到输入功率限制时降低电池充电电流，以避免在同时向系统和电池充电器供电时AC适配器过载。一个高度精确的电流感应放大器可以精确测量来自交流适配器的输入电流，以监测整个系统的功率。输入电流限制可通过设备的ACSET引脚配置。bq2461x有一个电池检测方案，允许它自动检测电池的存在和缺少。当电池被检测到时，充电开始于三个阶段之一(取决于电池电压):预充电、恒流(快速充电电流调节)和恒压(快速充电电压调节)。当达到终止电流阈值时，设备将终止充电。当电池电压降至充电阈值(V RECHG)以下时，开始一个充电周期。可通过ISET1和ISET2引脚配置预充电、恒流和终止电流，使电池充电配置更加灵活。在充电过程中，设备集成了电池过压保护、电池短路检测(V BATSHT)、热关机(内部T SHUT和TS引脚)、安全定时器过期(TTC引脚)、输入电压保护(V ACOV)等故障监控，确保电池安全。bq2461x有三个状态引脚(STAT1, STAT2, PG)来指示充电状态和输入电压(AC适配器)状态。这些引脚可以用来驱动led或与主机处理器通信。</p><p><img src="18.png" alt="18.png" /></p><p>上图额定参数:</p><p><img src="19.png" alt="19.png" /></p><p>为使bq2461x正常工作，VCC必须为5 V至28 V（bq24610）或24 V（bq24617）。要开始充电，VCC必须高于SRN至少500毫伏（否则，设备将处于休眠模式）。TI建议输入电压至少比电池电压高1.5 V到2 V，考虑到高侧FET（Rdson）、电感器（DCR）和输入感测电阻（ACP和ACN之间）的直流损耗、VCC和输入电源之间的RBFET体二极管压降以及电池感应电阻（SRP和SRN之间）。输入电源的功率限制必须大于系统负载或电池充电所需的最大功率（两者中的较大者）。</p><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="理论" scheme="https://hp-l.gitee.io/categories/%E7%90%86%E8%AE%BA/"/>
    
    
    <category term="机器之脉络" scheme="https://hp-l.gitee.io/tags/%E6%9C%BA%E5%99%A8%E4%B9%8B%E8%84%89%E7%BB%9C/"/>
    
    <category term="BQ24610" scheme="https://hp-l.gitee.io/tags/BQ24610/"/>
    
    <category term="电源管理" scheme="https://hp-l.gitee.io/tags/%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>STM32 HAL DHT11</title>
    <link href="https://hp-l.gitee.io/2024/03/22/stm32_hal_dht11/"/>
    <id>https://hp-l.gitee.io/2024/03/22/stm32_hal_dht11/</id>
    <published>2024-03-22T12:12:32.000Z</published>
    <updated>2024-04-30T04:32:51.710Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="记录一次cubeide的dht11代码调试"><a class="markdownIt-Anchor" href="#记录一次cubeide的dht11代码调试"></a> 记录一次CUBEIDE的DHT11代码调试</h1><blockquote><p>文末有贴代码，亲测可用</p></blockquote><h2 id="stm32cubeide"><a class="markdownIt-Anchor" href="#stm32cubeide"></a> STM32CUBEIDE</h2><p>首先本文是基于STM32官方出品的CUBEIDE进行代码编写和调试的</p><p><img src="1.png" alt="1.png" /></p><h2 id="环境搭建"><a class="markdownIt-Anchor" href="#环境搭建"></a> 环境搭建</h2><p>官网下载之后安转完成（软件安装后可能需要登录才可以下载相关库文件）</p><p>新建工程网上已经有很多博主写了，直接略过。关于DHT11除了一些基本配置（如外部晶振、调试接口等）需要使用的一些配置如下图：</p><p>注意生成代码记得勾选<code>Generate peripheral initialization as a pair of'.c/.h' files per peripheral</code></p><p><img src="9.png" alt="9.png" /></p><h3 id="tim配置"><a class="markdownIt-Anchor" href="#tim配置"></a> Tim配置</h3><p>本文选择<code>Tim3</code>，配置如图：</p><p><img src="2.png" alt="2.png" /></p><h3 id="usart配置"><a class="markdownIt-Anchor" href="#usart配置"></a> USART配置</h3><p>本文选择<code>Uart3</code>，配置如图：</p><p><img src="4.png" alt="4.png" /></p><p><img src="3.png" alt="3.png" /></p><h3 id="gpio配置"><a class="markdownIt-Anchor" href="#gpio配置"></a> GPIO配置</h3><p>本文选择<code>GPIOB12</code>，配置如图：</p><p><img src="5.png" alt="5.png" /></p><h2 id="配置完成保存生成代码"><a class="markdownIt-Anchor" href="#配置完成保存生成代码"></a> 配置完成保存生成代码</h2><p>手动添加代码如下</p><p>导入h文件，添加变量</p><p><img src="6.png" alt="6.png" /></p><p>打开串口中断初始化DHT11</p><p><img src="7.png" alt="7.png" /></p><p>获取DHT11数据以及数据类型转换和串口发送</p><p><img src="8.png" alt="8.png" /></p><p>下图可以看出获取到的温度数据<br /><img src="10.png" alt="10.png" /></p><h2 id="程序集合"><a class="markdownIt-Anchor" href="#程序集合"></a> 程序集合</h2><h3 id="需要修改项"><a class="markdownIt-Anchor" href="#需要修改项"></a> 需要修改项</h3><ol><li>在文件<code>dht11.h</code>搜索<code>#define DHT11_DATA_OUT_Pin GPIO_PIN_12</code>、<code>#define DHT11_DATA_OUT_GPIO_Port GPIOA</code>换成自己定义的GPIO。</li><li>在文件<code>dht11.c</code>搜索<code>htim3</code>，换成自己想要的定时器。</li><li><code>main.c</code> 函数中需要先定义初始化<code>dht11</code>，之后进行读温度湿度、注意<code>DHT11</code>是<code>5V</code>供电</li><li>如需添加串口中断函数可以直接添加在<code>main.c</code>中的<code>/* USER CODE BEGIN 4 */</code>位置</li></ol><h3 id="dht11c"><a class="markdownIt-Anchor" href="#dht11c"></a> DHT11.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DHT11.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tim.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHT11_DQ_IN HAL_GPIO_WritePin(DHT11_GPIO_Port, DHT11_Pin, GPIO_PIN_SET)  <span class="comment">//输入</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DelayUs</span><span class="params">(<span class="type">uint32_t</span> nus)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint16_t</span>  differ = <span class="number">0xffff</span> - nus - <span class="number">5</span>;</span><br><span class="line">    <span class="comment">//设置定时器2的技术初始值</span></span><br><span class="line">    __HAL_TIM_SetCounter(&amp;htim3, differ);</span><br><span class="line">    <span class="comment">//开启定时器</span></span><br><span class="line">    HAL_TIM_Base_Start(&amp;htim3);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>( differ &lt; <span class="number">0xffff</span> - <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        differ = __HAL_TIM_GetCounter(&amp;htim3);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭定时器</span></span><br><span class="line">    HAL_TIM_Base_Stop(&amp;htim3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DelayXms</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> t)</span></span><br><span class="line">&#123;</span><br><span class="line">    HAL_Delay(t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化DHT11，同时检测是否连接上DHT11，PA11初始化</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* GPIO Ports Clock Enable */</span></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">    HAL_GPIO_WritePin(GPIOA, DHT11_DATA_OUT_Pin, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">    GPIO_InitStruct.Pin = DHT11_DATA_OUT_Pin;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_PULLDOWN;</span><br><span class="line">    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">    HAL_GPIO_Init(DHT11_DATA_OUT_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">    DHT11_Rst();</span><br><span class="line">    <span class="keyword">return</span> DHT11_Check();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//复位DHT11</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_Rst</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    DHT11_IO_OUT(); <span class="comment">//SET OUTPUT</span></span><br><span class="line">    HAL_GPIO_WritePin(GPIOA, DHT11_DATA_OUT_Pin, GPIO_PIN_RESET); <span class="comment">//拉低</span></span><br><span class="line">    DelayXms(<span class="number">20</span>);    <span class="comment">//拉低延时至少18ms</span></span><br><span class="line">    HAL_GPIO_WritePin(GPIOA, DHT11_DATA_OUT_Pin, GPIO_PIN_SET); <span class="comment">//DQ=1，拉高</span></span><br><span class="line">    DelayUs(<span class="number">30</span>);     <span class="comment">//拉高延时至少20~40us</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测回应</span></span><br><span class="line"><span class="comment">//返回1：检测错误</span></span><br><span class="line"><span class="comment">//返回0：检测成功</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Check</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> retry = <span class="number">0</span>;</span><br><span class="line">    DHT11_IO_IN();<span class="comment">//SET INPUT</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_12) &amp;&amp; retry &lt; <span class="number">100</span>) <span class="comment">//DHT11拉低40~80us</span></span><br><span class="line">    &#123;</span><br><span class="line">        retry++;</span><br><span class="line">        DelayUs(<span class="number">12</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(retry &gt;= <span class="number">100</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> retry = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_12) &amp;&amp; retry &lt; <span class="number">100</span>) <span class="comment">//DHT11再次拉高40~80us</span></span><br><span class="line">    &#123;</span><br><span class="line">        retry++;</span><br><span class="line">        DelayUs(<span class="number">1</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(retry &gt;= <span class="number">100</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取一个位Bit</span></span><br><span class="line"><span class="comment">//返回1或0</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Read_Bit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> retry = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_12) &amp;&amp; retry &lt; <span class="number">100</span>) <span class="comment">//等待变低电平</span></span><br><span class="line">    &#123;</span><br><span class="line">        retry++;</span><br><span class="line">        DelayUs(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    retry = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_12) &amp;&amp; retry &lt; <span class="number">100</span>) <span class="comment">//等待变高电平</span></span><br><span class="line">    &#123;</span><br><span class="line">        retry++;</span><br><span class="line">        DelayUs(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    DelayUs(<span class="number">40</span>);<span class="comment">//等待40us</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_12))<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取一个字节</span></span><br><span class="line"><span class="comment">//返回读到的数据</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Read_Byte</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i, dat;</span><br><span class="line">    dat = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dat &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        dat |= DHT11_Read_Bit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DHT11读取一次数据</span></span><br><span class="line"><span class="comment">//temp:温度(范围:0~50°)</span></span><br><span class="line"><span class="comment">//humi:湿度(范围:20%~90%)</span></span><br><span class="line"><span class="comment">//tem：温度小数位</span></span><br><span class="line"><span class="comment">//hum：湿度小数位</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Read_Data</span><span class="params">(<span class="type">uint8_t</span> *temp, <span class="type">uint8_t</span> *humi, <span class="type">uint8_t</span> *tem, <span class="type">uint8_t</span> *hum)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> buf[<span class="number">5</span>];</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    DHT11_Rst();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(DHT11_Check() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) <span class="comment">//读取40位字节</span></span><br><span class="line">        &#123;</span><br><span class="line">            buf[i] = DHT11_Read_Byte();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((buf[<span class="number">0</span>] + buf[<span class="number">1</span>] + buf[<span class="number">2</span>] + buf[<span class="number">3</span>]) == buf[<span class="number">4</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            *humi = buf[<span class="number">0</span>];</span><br><span class="line">            *hum = buf[<span class="number">1</span>];</span><br><span class="line">            *temp = buf[<span class="number">2</span>];</span><br><span class="line">            *tem = buf[<span class="number">3</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//DHT11输出模式配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_IO_OUT</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* GPIO Ports Clock Enable */</span></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">    HAL_GPIO_WritePin(GPIOA, DHT11_DATA_OUT_Pin, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">    GPIO_InitStruct.Pin = DHT11_DATA_OUT_Pin;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_PULLDOWN;</span><br><span class="line">    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">    HAL_GPIO_Init(DHT11_DATA_OUT_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DHT11输入模式配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_IO_IN</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* GPIO Ports Clock Enable */</span></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">    <span class="comment">/*Configure GPIO pin : PC0 */</span></span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_12;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="dht11h"><a class="markdownIt-Anchor" href="#dht11h"></a> DHT11.h</h3><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _DHT11_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _DHT11_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHT11_DATA_OUT_Pin GPIO_PIN_12</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHT11_DATA_OUT_GPIO_Port GPIOA</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_Rst</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Check</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Read_Bit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Read_Byte</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Read_Data</span><span class="params">(<span class="type">uint8_t</span> *temp,<span class="type">uint8_t</span> *humi,<span class="type">uint8_t</span> *tem,<span class="type">uint8_t</span> *hum)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">DHT11_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_IO_IN</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_IO_OUT</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="串口中断函数"><a class="markdownIt-Anchor" href="#串口中断函数"></a> 串口中断函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 4 */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Interrupt_UARTX_接收</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 串口 3 中断 */</span></span><br><span class="line">    <span class="keyword">if</span>(huart == (&amp;huart3))</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//接收字符</span></span><br><span class="line">    HAL_UART_Transmit(&amp;huart3, &amp;kRxBuffer,  <span class="number">10</span>, <span class="number">100</span>);</span><br><span class="line">    <span class="comment">//�??启中�??</span></span><br><span class="line">        HAL_UART_Transmit_IT(&amp;huart3, &amp;kRxBuffer, <span class="number">100</span>);</span><br><span class="line">        <span class="comment">/* z */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Interrupt_UARTX_发�??</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_UART_TxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 串口�?????? */</span></span><br><span class="line">    <span class="keyword">if</span>(huart == (&amp;huart3))</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//发�?�数�??</span></span><br><span class="line">    HAL_UART_Receive(&amp;huart3, &amp;kRxBuffer, <span class="number">10</span>, <span class="number">100</span>);</span><br><span class="line">    <span class="comment">//打开中断</span></span><br><span class="line">        HAL_UART_Receive_IT(&amp;huart3, &amp;kRxBuffer, <span class="number">100</span>);</span><br><span class="line"><span class="comment">//        HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 4 */</span></span><br></pre></td></tr></table></figure><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="应用" scheme="https://hp-l.gitee.io/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="dht11" scheme="https://hp-l.gitee.io/tags/dht11/"/>
    
    <category term="stm32" scheme="https://hp-l.gitee.io/tags/stm32/"/>
    
    <category term="cubeide" scheme="https://hp-l.gitee.io/tags/cubeide/"/>
    
  </entry>
  
  <entry>
    <title>章节1-新鼹纪</title>
    <link href="https://hp-l.gitee.io/2024/03/21/zhang_jie_1_xin_yan_ji/"/>
    <id>https://hp-l.gitee.io/2024/03/21/zhang_jie_1_xin_yan_ji/</id>
    <published>2024-03-21T05:35:39.000Z</published>
    <updated>2024-04-30T04:32:51.880Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="新鼹纪"><a class="markdownIt-Anchor" href="#新鼹纪"></a> 新鼹纪</h2><p>人类这一科让世界变得多样化，不确定性逐步增加，地球再也绷不住了，做了一个几千万年前决定，重启！地球恶劣天气日益增多，山洪地震海啸地裂让熔岩再次有了可乘之机，汤加火山持续喷发，堆积的熔岩从大洋底部一直堆积，在大洋海面形成了小岛，持续飞扬的火山灰挡住了太阳的光和热，一切都冷了下来。海洋结成了冰，压着地壳喘不过气来。冰面把光和热反射想宇宙，本就寒冷的地球更加寒冷，太阳看着他的卫三叹了口气，全球极光持续了一年……</p><p>只可惜，这次重启，不太彻底……</p><p><em>……五千万年后……</em></p><p>一只肉乎乎的小手从土里伸了出来，一只近似星鼻鼹属的生物苟延残喘的活到了现在爬出了土层，开始探索这片自己也看不见的世界</p><p><em>……又三千万年……</em></p><p><strong>新鼹纪 241 万年</strong></p><p>鼹民新闻播报：今日 31 时左右，我国考古学家在 2114 鼹摆 （2000 米）深度处挖掘出来灵长类动物化石，按照同位素法时间推算，距今约有六千万到七千万年。</p><p>​鼹这一属统治了地球……</p><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="杂谈" scheme="https://hp-l.gitee.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="科幻随想" scheme="https://hp-l.gitee.io/tags/%E7%A7%91%E5%B9%BB%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>git图形化工具</title>
    <link href="https://hp-l.gitee.io/2024/03/20/git_tu_xing_hua_gong_ju/"/>
    <id>https://hp-l.gitee.io/2024/03/20/git_tu_xing_hua_gong_ju/</id>
    <published>2024-03-20T11:21:56.000Z</published>
    <updated>2024-04-30T04:32:51.781Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="图形化管理git"><a class="markdownIt-Anchor" href="#图形化管理git"></a> 图形化管理git</h2><blockquote><p><a target="_blank" rel="noopener" href="https://www.sourcetreeapp.com/">https://www.sourcetreeapp.com/</a></p></blockquote><h2 id="参考教程"><a class="markdownIt-Anchor" href="#参考教程"></a> 参考教程</h2><blockquote><p><a target="_blank" rel="noopener" href="https://www.liaoxuefeng.com/wiki/896043488029600/1317161920364578">https://www.liaoxuefeng.com/wiki/896043488029600/1317161920364578</a></p></blockquote><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="https://hp-l.gitee.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="git" scheme="https://hp-l.gitee.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>arduino使用TFT_eSPI库(ST7735)</title>
    <link href="https://hp-l.gitee.io/2024/03/14/arduino_shi_yong_tft_espi_ku_st7735/"/>
    <id>https://hp-l.gitee.io/2024/03/14/arduino_shi_yong_tft_espi_ku_st7735/</id>
    <published>2024-03-14T00:21:56.000Z</published>
    <updated>2024-04-30T04:32:51.755Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h2><p>搜索下载TFT_eSPI库</p><p>进入文件夹<code>C:\Users\xx\Documents\Arduino\libraries\TFT_eSPI</code>，有文件<code>User_Setup.h</code>和<code>User_Setup_Select.h</code></p><h3 id="user_setuph修改"><a class="markdownIt-Anchor" href="#user_setuph修改"></a> User_Setup.h修改</h3><ol><li>选择对应的液晶屏驱动芯片</li></ol><p><img src="1.png" alt="1.png" /></p><ol start="2"><li>配置颜色显示顺序<br />ST7789芯片中MADCTL (36h)寄存器的第3位控制像素颜色顺序</li></ol><p><img src="2.png" alt="2.png" /></p><ol start="3"><li>配置屏幕尺寸</li></ol><p><img src="3.png" alt="3.png" /></p><ol start="4"><li>配置屏幕颜色模式</li></ol><p><img src="4.png" alt="4.png" /></p><ol start="5"><li>定义Pin脚</li></ol><p><img src="5.png" alt="5.png" /></p><ol start="6"><li>配置需要用到的字体（会占用单片机存储空间）</li></ol><p><img src="6.png" alt="6.png" /></p><ol start="7"><li>配置SPI频率</li></ol><p><img src="7.png" alt="7.png" /></p><h3 id="user_setup_selecth修改"><a class="markdownIt-Anchor" href="#user_setup_selecth修改"></a> User_Setup_Select.h修改</h3><p><img src="8.png" alt="8.png" /></p><h2 id="写st7789ino"><a class="markdownIt-Anchor" href="#写st7789ino"></a> 写st7789.ino</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">  TFT_eSPI tft = <span class="built_in">TFT_eSPI</span>();</span><br><span class="line">  TFT_eSprite clk = <span class="built_in">TFT_eSprite</span>(&amp;tft);</span><br><span class="line">  tft.<span class="built_in">init</span>(ST7735_BLACK);</span><br><span class="line">  tft.<span class="built_in">setRotation</span>(<span class="number">1</span>);</span><br><span class="line">  tft.<span class="built_in">fillScreen</span>(TFT_BLACK);</span><br><span class="line">  tft.<span class="built_in">fillRect</span>(tft.<span class="built_in">width</span>() / <span class="number">2</span>, tft.<span class="built_in">height</span>() / <span class="number">2</span>, <span class="number">50</span>, <span class="number">50</span>, TFT_RED);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="常用函数"><a class="markdownIt-Anchor" href="#常用函数"></a> 常用函数</h2><blockquote><p>参考链接：<a target="_blank" rel="noopener" href="https://blog.csdn.net/finedayforu/article/details/108975245">https://blog.csdn.net/finedayforu/article/details/108975245</a></p></blockquote><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="应用" scheme="https://hp-l.gitee.io/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="arduino" scheme="https://hp-l.gitee.io/tags/arduino/"/>
    
    <category term="C++" scheme="https://hp-l.gitee.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>开源字体集合</title>
    <link href="https://hp-l.gitee.io/2024/03/06/kai_yuan_zi_ti_ji_he/"/>
    <id>https://hp-l.gitee.io/2024/03/06/kai_yuan_zi_ti_ji_he/</id>
    <published>2024-03-06T03:12:23.000Z</published>
    <updated>2024-04-30T04:32:51.861Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="落霞孤鹜"><a class="markdownIt-Anchor" href="#落霞孤鹜"></a> 落霞孤鹜</h2><blockquote><p>链接地址：<a target="_blank" rel="noopener" href="https://lxgw.github.io/">https://lxgw.github.io/</a></p></blockquote><blockquote><p>自改免费开源字体一览<br /><a target="_blank" rel="noopener" href="https://github.com/lxgw/LxgwMarkerGothic">悠哉字体 / Yozai (猫啃)</a><br /><a target="_blank" rel="noopener" href="https://github.com/lxgw/LxgwMarkerGothic">霞鹜文楷 / LXGW WenKai (猫啃)</a></p></blockquote><h2 id="京華老宋体"><a class="markdownIt-Anchor" href="#京華老宋体"></a> 京華老宋体</h2><blockquote><p>链接地址：<a target="_blank" rel="noopener" href="https://zhuanlan.zhihu.com/p/637491623">https://zhuanlan.zhihu.com/p/637491623</a></p></blockquote><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="其他" scheme="https://hp-l.gitee.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="字体" scheme="https://hp-l.gitee.io/tags/%E5%AD%97%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>博客字体超级压缩</title>
    <link href="https://hp-l.gitee.io/2024/03/02/bo_ke_zi_ti_chao_ji_ya_suo/"/>
    <id>https://hp-l.gitee.io/2024/03/02/bo_ke_zi_ti_chao_ji_ya_suo/</id>
    <published>2024-03-02T14:17:07.000Z</published>
    <updated>2024-04-30T04:32:51.830Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli #全局安装gulp指令集</span><br><span class="line">npm install gulp --save #安装gulp插件</span><br><span class="line">npm install --save-dev gulp-fontmin</span><br></pre></td></tr></table></figure><h2 id="脚本编写"><a class="markdownIt-Anchor" href="#脚本编写"></a> 脚本编写</h2><p>在博客根目录新建gulpfile.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&quot;gulp&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fontmin = <span class="built_in">require</span>(<span class="string">&quot;gulp-fontmin&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">minifyFont</span>(<span class="params">text, cb</span>) &#123;</span><br><span class="line">  gulp</span><br><span class="line">    .<span class="title function_">src</span>(<span class="string">&quot;source/font/*.ttf&quot;</span>) <span class="comment">//原字体所在目录</span></span><br><span class="line">    .<span class="title function_">pipe</span>(</span><br><span class="line">      <span class="title function_">fontmin</span>(&#123;</span><br><span class="line">        <span class="attr">text</span>: text,</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&quot;source/fontdest/&quot;</span>)) <span class="comment">//压缩后的输出目录</span></span><br><span class="line">    .<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, cb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&quot;mini-font&quot;</span>, <span class="function">(<span class="params">cb</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> buffers = [];</span><br><span class="line"></span><br><span class="line">  gulp</span><br><span class="line">    .<span class="title function_">src</span>([<span class="string">&quot;./.deploy_git/**/*.html&quot;</span>]) <span class="comment">//HTML文件所在目录请根据自身情况修改</span></span><br><span class="line">    .<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="keyword">function</span> (<span class="params">file</span>) &#123;</span><br><span class="line">      buffers.<span class="title function_">push</span>(file.<span class="property">contents</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> text = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>(buffers).<span class="title function_">toString</span>(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">      <span class="title function_">minifyFont</span>(text, cb);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&quot;default&quot;</span>, gulp.<span class="title function_">parallel</span>(<span class="string">&quot;mini-font&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="引入字体到主题文件中"><a class="markdownIt-Anchor" href="#引入字体到主题文件中"></a> 引入字体到主题文件中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;LXGW&quot;</span>; <span class="comment">/* 字体名自定义即可 */</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;/fontdest/霞鹜文楷.ttf&quot;</span>); <span class="comment">/* 字体文件路径 */</span></span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="压缩命令"><a class="markdownIt-Anchor" href="#压缩命令"></a> 压缩命令</h2><p>终端输入<code>gulp</code></p><p><img src="1.png" alt="1" /></p><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="应用" scheme="https://hp-l.gitee.io/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="字体" scheme="https://hp-l.gitee.io/tags/%E5%AD%97%E4%BD%93/"/>
    
    <category term="压缩" scheme="https://hp-l.gitee.io/tags/%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>SCT2650电源设计</title>
    <link href="https://hp-l.gitee.io/2024/03/01/sct2650_dian_yuan_she_ji/"/>
    <id>https://hp-l.gitee.io/2024/03/01/sct2650_dian_yuan_she_ji/</id>
    <published>2024-03-01T01:16:32.000Z</published>
    <updated>2024-04-30T04:32:51.681Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="sct2650"><a class="markdownIt-Anchor" href="#sct2650"></a> SCT2650</h1><p>本文介绍一款DCDC的芯片，<code>SCT2650STER</code>：4.5V-60V Vin, 5A，高效率降压DCDC转换器，可编程频率(<em>4.5V-60V Vin, 5A, High Efficiency Step-down DCDC Converter with Programmable Frequency</em>)</p><h2 id="规格书摘要"><a class="markdownIt-Anchor" href="#规格书摘要"></a> 规格书摘要</h2><h3 id="产品特点"><a class="markdownIt-Anchor" href="#产品特点"></a> 产品特点</h3><blockquote><ul><li>Wide Input Range: 4.5V-60V</li><li>Up to 5A Continuous Output Current</li><li>0.8V ±1% Feedback Reference Voltage</li><li>Adjustable Frequency 100KHz to 1.2MHz</li></ul></blockquote><h3 id="大致的电气特性"><a class="markdownIt-Anchor" href="#大致的电气特性"></a> 大致的电气特性</h3><p><img src="9.png" alt="电气特性" /></p><h3 id="33v参考设计"><a class="markdownIt-Anchor" href="#33v参考设计"></a> 3.3V参考设计：</h3><p><img src="1.png" alt="3.3V参考设计电路" /></p><h3 id="pin-function"><a class="markdownIt-Anchor" href="#pin-function"></a> PIN Function</h3><p><img src="2.png" alt="PIN Function " /></p><h3 id="switching-frequency"><a class="markdownIt-Anchor" href="#switching-frequency"></a> Switching Frequency</h3><p><img src="3.png" alt="DCDC开关频率" /></p><h3 id="输出电压"><a class="markdownIt-Anchor" href="#输出电压"></a> 输出电压</h3><p><img src="4.png" alt="输出电压计算" /></p><h3 id="500khz典型输出电压参考表"><a class="markdownIt-Anchor" href="#500khz典型输出电压参考表"></a> 500KHz典型输出电压参考表</h3><p><img src="5.png" alt="典型输出电压参考表" /></p><blockquote><p>规格书中还提到有逆变器方面的应用(<em>Inverting Power application</em>)</p></blockquote><p>这颗IC在24V输入3.3V输出5A电流时，温度高达92°C</p><p><img src="6.png" alt="典型输出电压参考表" /></p><p>在IC下方有一个大面积阻焊层连接到IC目的就是更好地散热</p><p><img src="7.png" alt="IC 封装" /></p><h3 id="layout-设计参考"><a class="markdownIt-Anchor" href="#layout-设计参考"></a> Layout 设计参考</h3><p>线上图</p><p><img src="8.png" alt="Layout 设计参考" /></p><p>Proper PCB layout is a critical for SCT2650’s stable and efficient operation. The traces conducting fast switching currents or voltages are easy to interact with stray inductance and parasitic capacitance to generate noise and degrade performance. For better results, follow these guidelines as below:</p><blockquote><ol><li>Power grounding scheme is very critical because of carrying power, thermal, and glitch/bouncing noise associated with clock frequency. The thumb of rule is to make ground trace lowest impendence and power are distributed evenly on PCB. Sufficiently placing ground area will optimize thermal and not causing over heat area.</li><li>Place a low ESR ceramic capacitor as close to VIN pin and the ground as possible to reduce parasitic effect.</li><li>Freewheeling diode should be place as close to SW pin and the ground as possible to reduce parasitic effect.</li><li>For operation at full rated load, the top side ground area must provide adequate heat dissipating area. Make sure top switching loop with power have lower impendence of grounding.</li><li>The bottom layer is a large ground plane connected to the ground plane on top layer by vias. The power pad should be connected to bottom PCB ground planes using multiple vias directly under the IC. The center thermal pad should always be soldered to the board for mechanical strength and reliability, using multiple thermal vias underneath the thermal pad. Improper soldering thermal pad to ground plate on PCB will cause SW higher ringing and overshoot besides downgrading thermal performance. it is recommended 8mil diameter drill holes of thermal vias, but a smaller via offers less risk of solder volume loss. On applications where solder volume loss thru the vias is of concern, plugging or tenting can be used to achieve a repeatable process.</li><li>Output inductor and freewheeling diode should be placed close to the SW pin. The switching area of the PCB conductor minimized to prevent excessive capacitive coupling.</li><li>The RT/CLK terminal is sensitive to noise so the RT resistor should be located as close as possible to the IC and routed with minimal lengths of trace.</li><li>UVLO adjust and RT resistors, loop compensation and feedback components should connect to small signal ground which must return to the GND pin without any interleaving with power ground.</li><li>Route BOOT capacitor trace on the other layer than top layer to provide wide path for topside ground.</li><li>For achieving better thermal performance, a four-layer layout is strongly recommended.</li></ol></blockquote><h2 id="我的线路设计"><a class="markdownIt-Anchor" href="#我的线路设计"></a> 我的线路设计</h2><p><img src="10.png" alt="原理图设计" /></p><h2 id="layout-设计"><a class="markdownIt-Anchor" href="#layout-设计"></a> Layout 设计</h2><p><img src="11.png" alt="Layout" /></p><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p><em>功能待验证</em></p><!-- Category：理论：理论知识技能，技术应用：应用笔记，实操折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)方法：方法论（经验谈），如工程方法工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里作品：自己的作品（成品）、个人项目日志等杂谈：生活碎碎念自然科学：物理，化学，数学其他：没法分类的东西Tags细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),形式：日志具体内容：个人作品、方法论、随笔语言：python C C# Java Html micropython 微信小程序IDE：Arduino CUBEIDE Vscode自然科学：代数 几何 概率 黑洞 白矮星 四维空间...IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI模组：ws2812b系统：Linux Windows macOS openwrt Docker   termux游戏：MC博客：hexo 主题 魔改折腾系类：黑苹果，整服务器，termux -->]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="应用" scheme="https://hp-l.gitee.io/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="机器之脉络" scheme="https://hp-l.gitee.io/tags/%E6%9C%BA%E5%99%A8%E4%B9%8B%E8%84%89%E7%BB%9C/"/>
    
    <category term="DCDC" scheme="https://hp-l.gitee.io/tags/DCDC/"/>
    
  </entry>
  
  <entry>
    <title>音频PCB设计学习与总结</title>
    <link href="https://hp-l.gitee.io/2024/02/29/yin_pin_pcb_she_ji_xue_xi_yu_zong_jie/"/>
    <id>https://hp-l.gitee.io/2024/02/29/yin_pin_pcb_she_ji_xue_xi_yu_zong_jie/</id>
    <published>2024-02-29T10:59:59.000Z</published>
    <updated>2024-04-30T04:32:51.951Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近在看音频功放类电路设计，也就是HiFi电路，其中涉及模拟电路和数字电路，在模拟电路中放大器将小信号放大的过程中，如果高频也就是数字地或者数字电路对模拟电路产生耦合，那么噪声也会被小信号放大电路所放大，于是就产生了杂音，音质不高。参考了做博客目前还没有实际做出成品，先了解学习一下。</p><h2 id="如何有效地接地"><a class="markdownIt-Anchor" href="#如何有效地接地"></a> 如何有效地接地</h2><p>在音频PCB设计中，<strong>单点接地</strong>和<strong>大面积铺地</strong>都是为了减少噪声和提高信号完整性。它们并不是相互排斥的概念，而是可以根据具体情况和设计需求灵活应用的。</p><p><em>单点接地</em>的主要优点在于能够有效地隔离不同功能模块之间的地回路，从而减少由于地环路产生的噪声。这种方法在处理模拟信号和低电平数字信号时特别有用，因为这些信号更容易受到地噪声的影响。然而，单点接地确实会增加PCB布局的复杂性，尤其是在高密度的集成电路中。</p><p>另一方面，<em>大面积铺</em>地可以提供良好的<strong>电磁屏蔽</strong>效果，有助于减少外部噪声对PCB上敏感电路的影响。此外，大面积铺地还可以<strong>降低</strong>PCB上的接地<strong>阻抗</strong>，从而减少地线电阻引起的噪声。在处理<em>高频信号</em>或需要<em>高电流承载能力</em>的应用中，<strong>大面积铺地尤为重要</strong>。</p><p>在实际设计中，可以根据具体需求和条件选择适当的接地策略。例如，可以将模拟地和数字地分开，并通过<strong>单点接地</strong>连接到公共地；同时，在PCB的<strong>外层使用大面积铺地</strong>，以提供电磁屏蔽和降低接地阻抗。这样的混合策略可以结合单点接地和大面积铺地的优点，从而获得最佳的设计效果。</p><p>简单说就是：<strong>高频走大面积地，低频音频走单点地</strong></p><p>想要地线阻抗为零是几乎不可能的，就算接近零也要看与扰动源的阻抗的比例是否足够小；总之：<br />1、功率地（低阻地）与信号地要注意电流走向，不要形成相互干扰，至少不应该产生正反馈<br />2、数字地与模拟信号要分开走到电源滤波地中点，<strong>不要让数字电路的脉冲干扰串入模拟地</strong><br />3、环地不光要看“直流”环地，也要看“交流”环地，电路分析中的交流分析中，电源是看为对地“短路”的，另外电源退耦电容也是交流短路（通交隔直）的<br />4、双电流的滤波电容接地更地一点接地，因为整流滤波是低阻脉动干扰源，脉动电流往往是安倍级，1毫欧的线路都能产生毫伏以上的脉动信号，百倍放大后应该都能听得到声音的了。</p><p>大面积要的是等电位面的概念，用于高频，小信号等小电流敏感区。等电位面严格说也应一点接地。一点接地要的是断掉地环流。</p><blockquote><p>地线环路干扰现象</p><ul><li>在PCB设计中，高频信号和低频信号的回流通路确实有所不同。</li><li>对于<em>低频信号</em>，其回流路径通常选择<strong>阻抗最低</strong>的路径。这是因为低频信号的频率相对较低，其对应的波长较长，因此信号的反射较小，主要考虑的是路径的电阻最小，以保证最小的能量损失。</li><li>而对于<em>高频信号</em>，其回流路径通常选择<strong>感抗最低</strong>的路径。随着信号频率的提高，信号的反射效应变得更加显著，此时需要考虑的是路径的电感和电容效应，使得信号能够在路径上顺利传输，因此高频信号的回流路径更倾向于选择感抗最低的路径。</li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="理论" scheme="https://hp-l.gitee.io/categories/%E7%90%86%E8%AE%BA/"/>
    
    
    <category term="机器之脉络" scheme="https://hp-l.gitee.io/tags/%E6%9C%BA%E5%99%A8%E4%B9%8B%E8%84%89%E7%BB%9C/"/>
    
    <category term="HiFi" scheme="https://hp-l.gitee.io/tags/HiFi/"/>
    
  </entry>
  
  <entry>
    <title>雷池防火墙安装</title>
    <link href="https://hp-l.gitee.io/2024/02/29/lei_chi_fang_huo_qiang_an_zhuang/"/>
    <id>https://hp-l.gitee.io/2024/02/29/lei_chi_fang_huo_qiang_an_zhuang/</id>
    <published>2024-02-29T08:19:36.000Z</published>
    <updated>2024-04-30T04:32:51.951Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="在线安装推荐"><a class="markdownIt-Anchor" href="#在线安装推荐"></a> 在线安装（推荐）</h2><p>如果服务器可以访问互联网环境，推荐使用该方式</p><p>复制以下命令执行，即可完成安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &quot;$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)&quot;</span><br></pre></td></tr></table></figure><p>如果需要使用华为云加速，可使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CDN=1 bash -c &quot;$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)&quot;</span><br></pre></td></tr></table></figure><p>如果需要安装最新版本流式检测模式，可使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STREAM=1 bash -c &quot;$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)&quot;</span><br></pre></td></tr></table></figure><h2 id="登录"><a class="markdownIt-Anchor" href="#登录"></a> 登录</h2><p>浏览器打开后台管理页面 <code>https://&lt;waf-ip&gt;:9443</code>。</p><p>根据界面提示，使用 支持 TOTP 的认证软件或者小程序 扫描二维码，然后输入动态口令登录：</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具" scheme="https://hp-l.gitee.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="服务器" scheme="https://hp-l.gitee.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="防火墙" scheme="https://hp-l.gitee.io/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>关于博客分类与标签</title>
    <link href="https://hp-l.gitee.io/2024/02/28/guan_yu_bo_ke_fen_lei_yu_biao_qian/"/>
    <id>https://hp-l.gitee.io/2024/02/28/guan_yu_bo_ke_fen_lei_yu_biao_qian/</id>
    <published>2024-02-28T09:35:16.000Z</published>
    <updated>2024-04-30T04:32:51.826Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="寻找分类的方案"><a class="markdownIt-Anchor" href="#寻找分类的方案"></a> 寻找分类的方案</h1><p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/holbrook/archive/2012/11/04/2753533.html">《IT人员如何管理知识》</a>这篇文章中把知识分为：</p><p>业务领域（决策层、管理层、执行层）<br />行业（IT、金融、媒体、支付、制造、零售）<br />技术细分（理论、方法论、解决方案、应用技术、工具）<br />有的人涉及领域很广，所以直接搬图书馆的分类，参考<a target="_blank" rel="noopener" href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E5%9B%BE%E4%B9%A6%E9%A6%86%E5%88%86%E7%B1%BB%E6%B3%95">《中国图书馆分类法》</a>：</p><p>A 马克思列宁主义、毛泽东思想、邓小平理论<br />B 哲学、宗教<br />C 社会科学总论<br />…<br />T 工业技术<br />U 交通运输<br />V 航空、航天<br />X 环境科学、安全科学<br /><a target="_blank" rel="noopener" href="https://www.cnblogs.com/holbrook/archive/2012/11/05/2755268.html">《如何规划blog的标签（tag）和分类》</a>中为博客分类，作者自己的评价是“这样粗线条的划分的好处是分类会比较稳定，毕竟更新分类比起添加tag要麻烦很多”：</p><p>1.域.业务领域<br />2.术.解决方案<br />3.技.技术研究<br />4.阵.技术应用<br />5.法.手段方法<br />6.理.理论学习<br />7.器.工具使用<br />A.杂.杂七杂八</p><h2 id="我的"><a class="markdownIt-Anchor" href="#我的"></a> 我的</h2><blockquote><p><a target="_blank" rel="noopener" href="https://noodlefighter.com/posts/2836/">🔗参考链接</a></p></blockquote><h3 id="category"><a class="markdownIt-Anchor" href="#category"></a> Category：</h3><p>理论：理论知识技能，技术<br />应用：应用笔记，实操<br />折腾：折腾折腾折腾折腾！(其实属于应用，但就是玩！)<br />方法：方法论（经验谈），如工程方法<br />工具：针对具体工具的介绍、使用方法、分析适用场景等；使用工具如何如何解决具体问题，应该放在「应用」里<br />作品：自己的作品（成品）、个人项目日志等<br />杂谈：生活碎碎念<br />自然科学：物理，化学，数学<br />其他：没法分类的东西</p><h3 id="tags"><a class="markdownIt-Anchor" href="#tags"></a> Tags</h3><blockquote><p>根据需要灵活添加，但应避免添加太细的tag以避免膨胀，例如：</p></blockquote><p>细分领域：机器之脉络(硬件),机器之魂魄(嵌入式软件,机器学习，算法等),机器之骨骼(结构),<br />形式：日志<br />具体内容：个人作品、方法论、随笔<br />语言：python C C# Java Html micropython 微信小程序<br />IDE：Arduino CUBEIDE Vscode<br />自然科学：代数 几何 概率 黑洞 白矮星 四维空间…<br />IC OR IDE : STM32 ESP32 ESP8266 C51 树莓派 RK3399 野火开发版 MIQI<br />模组：ws2812b<br />系统：Linux Windows macOS openwrt Docker   termux<br />游戏：MC<br />博客：hexo 主题 魔改<br />折腾系类：黑苹果，整服务器，termux</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="方法" scheme="https://hp-l.gitee.io/categories/%E6%96%B9%E6%B3%95/"/>
    
    
    <category term="方法论" scheme="https://hp-l.gitee.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>运算放大器</title>
    <link href="https://hp-l.gitee.io/2024/02/27/yun_suan_fang_da_qi/"/>
    <id>https://hp-l.gitee.io/2024/02/27/yun_suan_fang_da_qi/</id>
    <published>2024-02-27T06:40:03.000Z</published>
    <updated>2024-04-30T04:32:51.945Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="运算放大器op-amp"><a class="markdownIt-Anchor" href="#运算放大器op-amp"></a> 运算放大器(OP AMP)</h1><h2 id="比例放大电路"><a class="markdownIt-Anchor" href="#比例放大电路"></a> 比例放大电路</h2><p>两大重要原则贯穿始终，<code>“虚短”</code>与<code>“虚断”</code>。<code>“虚短”</code>的意思是正端和负端接近短路，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo>+</mo><mo>=</mo><mi>V</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">V+=V-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord">+</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord">−</span></span></span></span>,看起来像<code>“短路”</code>;<code>“虚断”</code>的意思是流入正端及负端的电流接近于零，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>+</mo><mo>=</mo><mi>I</mi><mo>−</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">I+=I-=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord">+</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>,看起来像<code>断路</code>（因为输入阻抗无穷大）。</p><p><img src="3.png" alt="3.png" /></p><p>有公式：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mo>−</mo><mfrac><msub><mi>R</mi><mn>2</mn></msub><msub><mi>R</mi><mn>1</mn></msub></mfrac><mo>×</mo><msub><mi>V</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">V_{out} = - \frac{R_2}{R_1} \times V_{in}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo></mrow><annotation encoding="application/x-tex">-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span></span></span></span>代表输出和输入相位相差180°。</p></blockquote><p>因为Vout与Vin成线性的比例关系，因此这个典型放大电路被称为<strong>比例放大电路</strong>。</p><blockquote><p>关于<code>R1</code>,<code>R2</code>及<code>R3</code>的选值：</p><ul><li><code>R1</code>,<code>R2</code>及<code>R3</code>应该在K级，不宜达到M级；</li><li><code>R3</code>应该等于或近似于<code>R1</code>与<code>R2</code>的并联，以消除偏置电流的影响。</li></ul></blockquote><h2 id="差分放大电路"><a class="markdownIt-Anchor" href="#差分放大电路"></a> 差分放大电路</h2><p><img src="4.png" alt="4.png" /></p><p>有公式：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mfrac><msub><mi>R</mi><mn>2</mn></msub><msub><mi>R</mi><mn>1</mn></msub></mfrac><mo>×</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mn>2</mn></msub><mo>−</mo><msub><mi>V</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V_{out} = \frac{R_2}{R_1} \times (V_{2}-V_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="同相放大电路"><a class="markdownIt-Anchor" href="#同相放大电路"></a> 同相放大电路</h2><p>输出和输入保持相同的相位。理想的运放具有输入阻抗无穷大，输出阻抗无穷小的特点，同相放大电路保持了运放的这种特性。</p><p><img src="5.png" alt="5.png" /></p><p>有公式：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mfrac><msub><mi>R</mi><mn>2</mn></msub><msub><mi>R</mi><mn>1</mn></msub></mfrac><mo stretchy="false">)</mo><mo>×</mo><msub><mi>V</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">V_{out} = (1+\frac{R_2}{R_1}) \times V_{in}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="运算放大器内部电路"><a class="markdownIt-Anchor" href="#运算放大器内部电路"></a> 运算放大器内部电路</h2><p>运算放大器是一种高电压增益、高输入电阻和低输出电阻的多级直接耦合放大电路。它的内部构造通常包括输入级、中间级和输出级。</p><p><img src="1.jpg" alt="1.jpg" /></p><h3 id="输入级"><a class="markdownIt-Anchor" href="#输入级"></a> 输入级</h3><p>输入级的主要功能是接收并放大输入信号。对于常见的运算放大器，例如741运放，输入级通常包括差动放大器和达林顿放大器。</p><h3 id="中间级"><a class="markdownIt-Anchor" href="#中间级"></a> 中间级</h3><p>中间级的主要作用是将信号从微弱的电平放大到足够大的电平时，再经过输出级的负载电阻，将放大的信号传递给负载，以供使用。</p><h3 id="输出级"><a class="markdownIt-Anchor" href="#输出级"></a> 输出级</h3><p>输出级的主要功能是将放大后的信号传递给负载。为了防止因受输出引脚上连接的电阻等的负载的影响使运算放大器的特性发生变化，通常会作为缓冲器连接输出段。</p><h2 id="运算放大器工作原理"><a class="markdownIt-Anchor" href="#运算放大器工作原理"></a> 运算放大器工作原理</h2><p>运算放大器的工作原理主要是通过放大输入信号的微小差异来实现。具体来说，当输入端之一接受到更高电压时，运算放大器会增大，随后产生相应的输出转变。</p><p>例如，对于741运放，当输入端的电位发生改变时，由于电源电压的变化，使得输入端的电位发生改变。当电源电压为0V或5v时，输入端的电位为-2.5V，此时如果采用分压方式，那么，通过中间的反馈电阻R，使R上的电流变化，从而引起反馈网络的通断，进而影响整个放大器的频率响应。</p><h2 id="运算放大器的性能指标"><a class="markdownIt-Anchor" href="#运算放大器的性能指标"></a> 运算放大器的性能指标</h2><p>运算放大器的性能指标主要包括以下几个方面：</p><ol><li><strong>静态工作点</strong>：指无外界干扰，且温度恒定的情况下，放大器稳定工作的工作点。</li><li><strong>增益</strong>：是指单位增益下，对被处理信号的线性度。</li><li><strong>失调</strong>：是指在某一频率范围内，某上所加激励与该频率下的被处理量之比的值。</li><li><strong>频响</strong>：是指放大器在给定激励条件下，对指定波形进行不失真重放的频带宽度。</li></ol><h2 id="运算放大器的分类"><a class="markdownIt-Anchor" href="#运算放大器的分类"></a> 运算放大器的分类</h2><p>按照结构形式，运算放大器可以分为单片式、双极型及多极型。其中，单片式具有体积小、重量轻，价格低的特点；双极型利用双极性的互补作用来改善共模抑制比，提高抗干扰能力，同时还可以减小自身噪声；多芯片集成设计可以有效地降低系统的成本，而且，多芯片集成的设计，可以使系统更加紧凑，有利于散热。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="理论" scheme="https://hp-l.gitee.io/categories/%E7%90%86%E8%AE%BA/"/>
    
    
    <category term="机器之脉络" scheme="https://hp-l.gitee.io/tags/%E6%9C%BA%E5%99%A8%E4%B9%8B%E8%84%89%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>肖特基二极管</title>
    <link href="https://hp-l.gitee.io/2024/02/20/xiao_te_ji_er_ji_guan/"/>
    <id>https://hp-l.gitee.io/2024/02/20/xiao_te_ji_er_ji_guan/</id>
    <published>2024-02-19T16:03:29.000Z</published>
    <updated>2024-04-30T04:32:51.880Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="肖特基二极管技术详解"><a class="markdownIt-Anchor" href="#肖特基二极管技术详解"></a> 肖特基二极管技术详解</h1><h2 id="什么是肖特基二极管"><a class="markdownIt-Anchor" href="#什么是肖特基二极管"></a> 什么是肖特基二极管？</h2><p>肖特基二极管是一种利用金属-半导体（M-S）接触原理制成的半导体器件。它与传统的PN结二极管不同，具有较低的正向导通压降和快速的切换速度，因此在许多高频、高效率的应用中表现出色。</p><h2 id="肖特基二极管的定义和内部结构"><a class="markdownIt-Anchor" href="#肖特基二极管的定义和内部结构"></a> 肖特基二极管的定义和内部结构</h2><h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3><p>肖特基二极管是一种基于金属-半导体接触的半导体器件，具有优异的开关性能和高频特性。</p><h3 id="内部结构"><a class="markdownIt-Anchor" href="#内部结构"></a> 内部结构</h3><p>肖特基二管的内部结构主要包括一个N型半导体和一个金属层。N型半导体提供大量的电子，而金属层则吸引这些电子，形成一个内建电场。</p><p><img src="1.png" alt="肖特基二极管示意图" /></p><h2 id="肖特基二极管的等效电路和工作原理"><a class="markdownIt-Anchor" href="#肖特基二极管的等效电路和工作原理"></a> 肖特基二极管的等效电路和工作原理</h2><h3 id="等效电路"><a class="markdownIt-Anchor" href="#等效电路"></a> 等效电路</h3><p>在电路中，肖特基二极管通常被表示为一个具有恒定电压降（Vf）的开关元件。这个电压降远低于传统PN结二极管的0.7V，使得肖特基二极管在高频整流中具有更高的效率。<br /><img src="2.png" alt="肖特基二极管示意图" /></p><h3 id="工作原理"><a class="markdownIt-Anchor" href="#工作原理"></a> 工作原理</h3><h4 id="无偏置状态"><a class="markdownIt-Anchor" href="#无偏置状态"></a> 无偏置状态</h4><p>在没有外加电压的情况下，N型半导体和金属层之间存在一个内建电场，阻止电流的流动。</p><h4 id="正向偏置"><a class="markdownIt-Anchor" href="#正向偏置"></a> 正向偏置</h4><p>当在肖特基二极管两端施加正向电压时，内建电场减弱，电子获得能量并跨越势垒，导致电流的流动。<br /><img src="3.png" alt="肖特基二极管示意图" /></p><h4 id="反向偏置"><a class="markdownIt-Anchor" href="#反向偏置"></a> 反向偏置</h4><p>在反向偏置条件下，内建电场增强，势垒高度增加，从而阻止电流的流动。<br /><img src="4.png" alt="肖特基二极管示意图" /></p><h2 id="肖特基二极管的vi特性和优缺点"><a class="markdownIt-Anchor" href="#肖特基二极管的vi特性和优缺点"></a> 肖特基二极管的VI特性和优缺点</h2><h3 id="vi特性"><a class="markdownIt-Anchor" href="#vi特性"></a> VI特性</h3><p>肖特基二极管的VI特性由其内部的肖特基势垒决定。当外加电压小于阈值电压（Vf）时，二极管处于截止状态，电流很小。当电压大于Vf时，二极管开始导电，电流随电压线性增加。</p><p><img src="5.jpg" alt="肖特基二极管示意图" /></p><h3 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h3><ol><li><strong>低正向导通压降</strong>：肖特基二极管的Vf较低，有利于提高电路的整体效率。</li><li><strong>快速恢复时间</strong>：肖特基二极管具有快速的切换速度，适合于高频应用。</li><li><strong>低结电容</strong>：较小的结电容有助于减少噪声和干扰。</li><li><strong>高电流密度</strong>：肖特基二极管能够承受较高的电流密度，适用于功率密集型的应用。</li><li><strong>噪音更小</strong>：由于其特殊的结构和工作原理，肖特基二极管的噪音水平相对较低。</li><li><strong>性能更好</strong>：综合以上优点，肖特基二极管在许多应用中表现出优异的性能。</li></ol><h3 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h3><ol><li><strong>较高反向电流</strong>：在高温或高反向电压下，肖特基二极管可能产生较高的反向漏电流。</li><li><strong>较低最大反向电压</strong>：相比于传统PN结二极管，肖特基二极管的最大反向击穿电压较低。</li></ol><h2 id="肖特基二极管的特别之处及应用领域"><a class="markdownIt-Anchor" href="#肖特基二极管的特别之处及应用领域"></a> 肖特基二极管的特别之处及应用领域</h2><p>肖特基二极管的特别之处在于其优异的开关性能和高频特性。这使得它在射频混频器、检波二极管、功率整流器、电源或电路电压钳位/削波电路、反向电流和放电保护、采样保持电路以及太阳能电池等领域有着广泛的应用。</p><h3 id="特别之处"><a class="markdownIt-Anchor" href="#特别之处"></a> 特别之处</h3><ol><li><strong>高效率</strong>：由于低正向导通压降，肖特基二极管在高频整流中具有更高的效率。</li><li><strong>快速响应</strong>：快速的切换速度使得肖特基二极管能够应对高速变化的信号。</li></ol><h3 id="应用领域"><a class="markdownIt-Anchor" href="#应用领域"></a> 应用领域</h3><ol><li><strong>射频混频器和检波二极管</strong>：在射频通信中，肖特基二极管用于实现信号的混频和检波功能。</li><li><strong>功率整流器</strong>：由于其高电流承受能力，肖特基二极管常用于功率整流器中，将交流电转换为直流电。</li><li><strong>电源或电路电压钳位/削波电路</strong>：肖特基二极管用于限制电路中的电压峰值，保护敏感元件免受损伤。</li><li><strong>反向电流和放电保护</strong>：在电池等储能设备中，肖特基二极管用于防止反向电流造成的损坏。</li><li><strong>采样保持电路</strong>：在模拟-数字转换器中，肖特基二极管用于维持输入信号的稳定状态。</li><li><strong>太阳能电池</strong>：肖特基二极管用于太阳能电池的旁路电路，提高电池的输出性能。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="理论" scheme="https://hp-l.gitee.io/categories/%E7%90%86%E8%AE%BA/"/>
    
    
    <category term="机器之脉络" scheme="https://hp-l.gitee.io/tags/%E6%9C%BA%E5%99%A8%E4%B9%8B%E8%84%89%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>初识k8s</title>
    <link href="https://hp-l.gitee.io/2024/02/19/chu_shi_k8s/"/>
    <id>https://hp-l.gitee.io/2024/02/19/chu_shi_k8s/</id>
    <published>2024-02-19T09:14:28.000Z</published>
    <updated>2024-04-30T04:32:51.826Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="kubernetes能做什么"><a class="markdownIt-Anchor" href="#kubernetes能做什么"></a> Kubernetes能做什么</h1><p>Kubernetes（简称K8S）是一款开源的容器编排平台，主要用于自动化部署、管理和扩展容器化应用。以下是Kubernetes的主要功能和用途：</p><ol><li><p><strong>自动化部署</strong>：Kubernetes可以自动化部署容器化应用，包括应用的创建、启动、停止和重启等操作。</p></li><li><p><strong>负载均衡</strong>：Kubernetes可以为容器提供负载均衡服务，使得不同容器之间的请求能够均匀分配，提高应用的整体性能。</p></li><li><p><strong>扩展和缩减</strong>：Kubernetes可以根据应用的需求自动扩展或缩减容器的数量，以满足应用的不同负载需求。</p></li><li><p><strong>故障恢复</strong>：当某个容器出现故障时，Kubernetes可以自动替换这个容器，保证应用的高可用性。</p></li><li><p><strong>服务发现</strong>：Kubernetes可以为每个容器提供唯一的网络标识，使得其他容器可以通过这个标识找到并访问该容器。</p></li><li><p><strong>存储管理</strong>：Kubernetes支持多种类型的存储系统，可以为容器提供持久化的存储服务。</p></li><li><p><strong>安全保障</strong>：Kubernetes提供了丰富的安全策略和工具，可以帮助开发者更好地保护他们的应用。</p></li><li><p><strong>批处理</strong>：除了服务外，Kubernetes还可以管理批处理和CI（持续集成）工作负载，如有需要，可以替换失败的容器。</p></li><li><p><strong>水平扩缩</strong>：使用简单的命令、用户界面或根据CPU使用率自动对你的应用进行扩缩。</p></li><li><p><strong>IPv4/IPv6双栈</strong>：为Pod（容器组）和Service（服务）分配IPv4和IPv6地址。</p></li><li><p><strong>为可扩展性设计</strong>：在不改变上游源代码的情况下为你的Kubernetes集群添加功能。</p></li></ol><p>总的来说，Kubernetes提供了一种高效、灵活的方式来管理容器化应用，使得开发者可以更加专注于应用本身，而不需要关心基础设施的问题。</p><h1 id="他是如何实现多个硬件共同运行一个程序的"><a class="markdownIt-Anchor" href="#他是如何实现多个硬件共同运行一个程序的"></a> 他是如何实现多个硬件共同运行一个程序的</h1><p>Kubernetes通过以下方式实现多个硬件共同运行一个程序：</p><ol><li><p><strong>Pods</strong>：在Kubernetes中，最小的工作单位是Pod，一个Pod可以包含一个或多个容器，这些容器共享存储、网络和其他资源。这意味着，在一个硬件设备（Node）上可以运行多个Pod，每个Pod都可以是一个独立的应用程序或服务。</p></li><li><p><strong>ReplicaSets</strong>：为了确保高可用性，Kubernetes可以使用ReplicaSet来复制Pod的实例，并在多个硬件设备（Node）上运行这些实例。这样即使某个硬件设备发生故障，也不会影响到整个应用的运行。</p></li><li><p><strong>Services</strong>：Kubernetes中的Service是一种抽象，它可以暴露一组Pod的接口，并将请求路由到这些Pod。这意味着，无论Pod在哪个硬件设备上运行，只要它们属于同一个Service，外部就可以通过这个Service来访问它们。</p></li><li><p><strong>Storage Management</strong>：Kubernetes还提供了存储管理功能，可以将数据持久化存储在云存储或其他存储系统中，这样即使硬件设备发生故障，数据也不会丢失。</p></li><li><p><strong>Load Balancing</strong>：Kubernetes还内置了负载均衡功能，可以将请求分发给多个Pod，从而充分利用硬件资源，提高应用性能。</p></li></ol><p>以上就是Kubernetes如何实现多个硬件共同运行一个程序的基本原理。具体实现过程可能会因具体的应用场景和需求有所不同。</p><h1 id="kubernetes-架构"><a class="markdownIt-Anchor" href="#kubernetes-架构"></a> Kubernetes 架构</h1><p>Kubernetes 最初源于谷歌内部的 Borg，提供了面向应用的容器集群部署和管理系统。Kubernetes 的目标旨在消除编排物理 / 虚拟计算，网络和存储基础设施的负担，并使应用程序运营商和开发人员完全将重点放在以容器为中心的原语上进行自助运营。Kubernetes 也提供稳定、兼容的基础（平台），用于构建定制化的 workflows 和更高级的自动化任务。 Kubernetes 具备完善的集群管理能力，包括多层次的安全防护和准入机制、多租户应用支撑能力、透明的服务注册和服务发现机制、内建负载均衡器、故障发现和自我修复能力、服务滚动升级和在线扩容、可扩展的资源自动调度机制、多粒度的资源配额管理能力。Kubernetes 还提供完善的管理工具，涵盖开发、部署测试、运维监控等各个环节。</p><p>Kubernetes 借鉴了 Borg 的设计理念，比如 Pod、Service、Label 和单 Pod 单 IP 等。Kubernetes 的整体架构跟 Borg 非常像。</p><p><img src="./1.jpg" alt="架构" /></p><h2 id="分层架构"><a class="markdownIt-Anchor" href="#分层架构"></a> 分层架构</h2><p><img src="./2.png" alt="架构" /></p><ul><li>核心层：Kubernetes 最核心的功能，对外提供 API 构建高层的应用，对内提供插件式应用执行环境</li><li>应用层：部署（无状态应用、有状态应用、批处理任务、集群应用等）和路由（服务发现、DNS 解析等）、Service Mesh（部分位于应用层）</li><li>管理层：系统度量（如基础设施、容器和网络的度量），自动化（如自动扩展、动态 Provision 等）以及策略管理（RBAC、Quota、PSP、NetworkPolicy 等）、Service Mesh（部分位于管理层）</li><li>接口层：kubectl 命令行工具、客户端 SDK 以及集群联邦</li><li>生态系统：在接口层之上的庞大容器集群管理调度的生态系统，可以划分为两个范畴</li><li>Kubernetes 外部：日志、监控、配置管理、CI/CD、Workflow、FaaS、OTS 应用、ChatOps、GitOps、SecOps 等</li><li>Kubernetes 内部：CRI、CNI、CSI、镜像仓库、Cloud Provider、集群自身的配置和管理等</li></ul><h1 id="参考链接"><a class="markdownIt-Anchor" href="#参考链接"></a> 参考链接</h1><p><a target="_blank" rel="noopener" href="https://jimmysong.io/kubernetes-handbook/concepts/">架构</a><br /><a target="_blank" rel="noopener" href="https://jimmysong.io/kubernetes-handbook/practice/install-kubernetes-on-centos.html">部署</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="应用" scheme="https://hp-l.gitee.io/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="k8s" scheme="https://hp-l.gitee.io/tags/k8s/"/>
    
    <category term="服务器" scheme="https://hp-l.gitee.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>ESP8266 arduino http OTA</title>
    <link href="https://hp-l.gitee.io/2024/01/15/esp8266_arduino_http_ota/"/>
    <id>https://hp-l.gitee.io/2024/01/15/esp8266_arduino_http_ota/</id>
    <published>2024-01-15T11:10:24.000Z</published>
    <updated>2024-04-30T04:32:51.646Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ESP8266不仅可以通过IDE进行OTA，也可以通过具体网址进行OTA</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266httpUpdate.h&gt;</span></span></span><br><span class="line"><span class="comment">// ESP8266HTTPUpdateServer httpUpdater;</span></span><br><span class="line">WiFiClient UpdateClient;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能：联网下载固件文件OTA</span></span><br><span class="line"><span class="comment"> * @param NONE</span></span><br><span class="line"><span class="comment"> * @return NONE</span></span><br><span class="line"><span class="comment"> * @example https_OTA();</span></span><br><span class="line"><span class="comment"> * @note NONE</span></span><br><span class="line"><span class="comment"> * @link https://zhuanlan.zhihu.com/p/435855807</span></span><br><span class="line"><span class="comment"> * @history</span></span><br><span class="line"><span class="comment"> * V0.0.1 2024-01-05 初始版本，未能实现功能</span></span><br><span class="line"><span class="comment"> * V0.0.1 2024-01-08 更新变量 UpdateClient，成功升级</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">https_OTA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// 设置回调函数以获取下载进度</span></span><br><span class="line">    ESPhttpUpdate.<span class="built_in">onProgress</span>([](<span class="type">int</span> progress, <span class="type">int</span> total) &#123;</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;Progress: %d%%\n&quot;</span>, (progress * <span class="number">100</span>) / total);</span><br><span class="line">      strip.<span class="built_in">setPixelColor</span>(((progress / (total / <span class="number">100</span>))) - <span class="number">1</span>, (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span> * brightness / <span class="number">100</span>, (<span class="number">255</span> - (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span>) * brightness / <span class="number">100</span>, (<span class="number">255</span> - (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span>) * brightness / <span class="number">100</span>);</span><br><span class="line">      strip.<span class="built_in">show</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    t_httpUpdate_return ret = ESPhttpUpdate.<span class="built_in">update</span>(UpdateClient, <span class="string">&quot;http://xxxxxxxx/beta_0_0_1.bin&quot;</span>);</span><br><span class="line">    <span class="comment">// t_httpUpdate_return ESP8266HTTPUpdate::handleUpdate(&quot;http://hp-l.gitee.io/electronic_calendar_main/IoT/electronic.bin&quot;);</span></span><br><span class="line">    <span class="keyword">switch</span> (ret) &#123;</span><br><span class="line">      <span class="keyword">case</span> HTTP_UPDATE_OK:</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="string">&quot;Firmware updated successfully&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> HTTP_UPDATE_FAILED:</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="string">&quot;Firmware update failed&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> HTTP_UPDATE_NO_UPDATES:</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="string">&quot;No firmware updates available&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        Serial.<span class="built_in">printf</span>(<span class="string">&quot;Firmware update error %d\n&quot;</span>, ret);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="应用" scheme="https://hp-l.gitee.io/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="ESP8266" scheme="https://hp-l.gitee.io/tags/ESP8266/"/>
    
    <category term="arduino" scheme="https://hp-l.gitee.io/tags/arduino/"/>
    
    <category term="OTA" scheme="https://hp-l.gitee.io/tags/OTA/"/>
    
  </entry>
  
  <entry>
    <title>ESP8266 arduino OTA</title>
    <link href="https://hp-l.gitee.io/2024/01/15/esp8266_arduino_ota/"/>
    <id>https://hp-l.gitee.io/2024/01/15/esp8266_arduino_ota/</id>
    <published>2024-01-15T11:02:46.000Z</published>
    <updated>2024-04-30T04:32:51.645Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>联网成功后可以通过IDE进行OTA升级，代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoOTA.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能：OTA初始化</span></span><br><span class="line"><span class="comment"> * @param NONE</span></span><br><span class="line"><span class="comment"> * @return NONE</span></span><br><span class="line"><span class="comment"> * @example arduino_8266_OTA();</span></span><br><span class="line"><span class="comment"> * @note NONE</span></span><br><span class="line"><span class="comment"> * @history</span></span><br><span class="line"><span class="comment"> * V0.0.1 2024-01-05 初始版本</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">arduino_8266_OTA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// OTA设置并启动</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setHostname(&quot;ESP8266&quot;);</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setPassword(&quot;12345678&quot;);</span></span><br><span class="line">  ArduinoOTA.<span class="built_in">begin</span>();</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;OTA ready&quot;</span>);</span><br><span class="line">  ArduinoOTA.<span class="built_in">onStart</span>([]() &#123;</span><br><span class="line">    String type;</span><br><span class="line">    <span class="keyword">if</span> (ArduinoOTA.<span class="built_in">getCommand</span>() == U_FLASH) &#123;</span><br><span class="line">      type = <span class="string">&quot;sketch&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  <span class="comment">// U_FS</span></span><br><span class="line">      type = <span class="string">&quot;filesystem&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;Start updating &quot;</span> + type);</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.<span class="built_in">onProgress</span>([](<span class="type">unsigned</span> <span class="type">int</span> progress, <span class="type">unsigned</span> <span class="type">int</span> total) &#123;</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;Progress: %u%%\r&quot;</span>, (progress / (total / <span class="number">100</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// strip.setPixelColor((progress / (total / 100)) - 1, 1, 0, 1);</span></span><br><span class="line">    strip.<span class="built_in">setPixelColor</span>(((progress / (total / <span class="number">100</span>))) - <span class="number">1</span>, (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span> * brightness / <span class="number">100</span>, (<span class="number">255</span> - (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span>) * brightness / <span class="number">100</span>, (<span class="number">255</span> - (progress / (total / <span class="number">100</span>)) / <span class="number">100</span> * <span class="number">255</span>) * brightness / <span class="number">100</span>);</span><br><span class="line">    strip.<span class="built_in">show</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.<span class="built_in">onError</span>([](<span class="type">ota_error_t</span> error) &#123;</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;OTA更新发生错误[%u]: &quot;</span>, error);</span><br><span class="line">    <span class="keyword">if</span> (error == OTA_AUTH_ERROR) &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;认证失败&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_BEGIN_ERROR) &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;开始失败&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_CONNECT_ERROR) &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_RECEIVE_ERROR) &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;接收失败&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_END_ERROR) &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;结束失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 复位设备</span></span><br><span class="line">    ESP.<span class="built_in">restart</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.<span class="built_in">onEnd</span>([]() &#123;</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;OTA更新结束&quot;</span>);</span><br><span class="line">    strip.<span class="built_in">clear</span>();  <span class="comment">// 关闭所有灯</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码中<code>brightness</code>是led的亮度，范围是<code>1</code>~<code>100</code>，setPixelColor可以参考点亮ws2812的文章</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="应用" scheme="https://hp-l.gitee.io/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="ESP8266" scheme="https://hp-l.gitee.io/tags/ESP8266/"/>
    
    <category term="arduino" scheme="https://hp-l.gitee.io/tags/arduino/"/>
    
    <category term="OTA" scheme="https://hp-l.gitee.io/tags/OTA/"/>
    
  </entry>
  
</feed>
